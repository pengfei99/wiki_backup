====== DokuWiki ======

===== Informations =====

  * **Version** : 2013-12-08 //"Binky"//
  * **Licence** : GPLv2
  * **Page Web** : [[https://www.dokuwiki.org]]
  * **Description** : DokuWiki is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki. 

===== Installation =====

<code>
</code>

===== Configuration=====

<code php lib/plugins/certlogin/auth.php>
<?php
/**
 * DokuWiki Plugin certlogin (Auth Component)
 *
 * @license GPL 2 http://www.gnu.org/licenses/gpl-2.0.html
 * @author  Tanguy LE CARROUR <tanguy.lecarrour@bioaster.org>
 */

// must be run within Dokuwiki
if(!defined('DOKU_INC')) die();

class auth_plugin_certlogin extends DokuWiki_Auth_Plugin {

    /**
     * Constructor.
     */
    public function __construct() {
        parent::__construct(); // for compatibility

        $this->cando['external']    = true; // does the module do external auth checking?
        $this->cando['logout']      = true; // can the user logout again? (eg. not possible with HTTP auth)

        // FIXME intialize your auth system and set success to true, if successful
        $this->success = true;
    }

    /**
     * Log off the current user [ OPTIONAL ]
     */
    public function logOff() {
    }

    /**
     * Do all authentication [ OPTIONAL ]
     *
     * @param   string  $user    Username
     * @param   string  $pass    Cleartext Password
     * @param   bool    $sticky  Cookie should not expire
     * @return  bool             true on successful auth
     */
    public function trustExternal($user, $pass, $sticky = false) {

        global $USERINFO;
        global $conf;
        $sticky ? $sticky = true : $sticky = false; //sanity check

        $name = array_shift(explode(",", $_SERVER["SSL_CLIENT_S_DN_CN"]));
        $email = array_shift(explode(",", $_SERVER["SSL_CLIENT_S_DN_EMAILADDRESS"]));
        $pattern = '/@bioaster.org$/';
        if (preg_match($pattern, $email) == 0) {
            header("HTTP/1.0 403 Forbidden");
            print("<h1>Forbidden</h1><p>Go away!</p>");
            die();
        }

        // do the checking here

        // set the globals if authed
        $USERINFO['name'] = $name;
        $USERINFO['mail'] = $email;
        $USERINFO['grps'] = array('admin', 'user');
        $_SERVER['REMOTE_USER'] = $email;
        $_SESSION[DOKU_COOKIE]['auth']['user'] = $user;
        $_SESSION[DOKU_COOKIE]['auth']['pass'] = $pass;
        $_SESSION[DOKU_COOKIE]['auth']['info'] = $USERINFO;
        return true;
    }

    /**
     * Return user info
     *
     * Returns info about the given user needs to contain
     * at least these fields:
     *
     * name string  full name of the user
     * mail string  email addres of the user
     * grps array   list of groups the user is in
     *
     * @param   string $user the user name
     * @return  array containing user data or false
     */
    public function getUserData($user) {
        return $USERINFO;
    }

}

</code>

Ne pas oublier de changer le "Auth Backend" dans la configuration.


===== Log =====

* **2014.02.13 (tlc)** Version 2013-12-08 //"Binky"// install√©e