====== Java Thread Pool ======


Why you need thread pool in Java? The answer is usually when you develop a simple, concurrent application in Java, you create some Runnable objects and then create the corresponding Thread objects to execute them. Creating a thread in Java is an expensive operation. And if you start creating new thread instance every time to execute a task, application performance will degrade surely.

===== Threads pool =====

There are various thread pools in java:

Single Thread Executor: A thread pool with only one thread. So all the submitted tasks will be executed sequentially. Method : Executors.newSingleThreadExecutor()

Cached Thread Pool: A thread pool that creates as many threads it needs to execute the task in parallel. The old available threads will be reused for the new tasks. If a thread is not used for 60 seconds, it will be terminated and removed from the pool. Method : Executors.newCachedThreadPool()

Fixed Thread Pool: A thread pool with a fixed number of threads. If a thread is not available for the task, the task is put in a queue waiting for the other task to ends. Method : Executors.newFixedThreadPool()

Scheduled Thread Pool: A thread pool made to schedule future task. Method : Executors.newScheduledThreadPool()

Single Thread Scheduled Pool: A thread pool with only one thread to schedule future task. Method : Executors.newSingleThreadScheduledExecutor()