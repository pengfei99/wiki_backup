====== Use apache commun lang3 to do string and file templating ======

===== Import dependencies via maven or gradle =====

Maven dependencies

<code>
<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-lang3</artifactId>
    <version>3.6</version>
</dependency>
</code>

Gradle dependencies

<code>
// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
</code>

===== String template code example =====

<code java>
//The method in a class called MailMessage which returns the text after replace the variable
public String getMessageFromStringTemplate(String template, Map<String,String> valuesMap){
       StrSubstitutor sub = new StrSubstitutor(valuesMap);
       return sub.replace(template);
   }
   
//The code in main for test
MailMessage mailMess=MailMessage.getInstance();
Map<String, String> valuesMap = new HashMap<String, String>();
valuesMap.put("userName", "pengfei");
valuesMap.put("userMail", "haha@pengfei.org");
String template=" The user name is ${userName},\n The user mail is ${userMail}.";
String text = mailMess.getMessageFromStringTemplate(template,valuesMap);
System.out.println(text);
</code>

===== File template code example =====

<code java>
//The method in a class called MailMessage which returns the text after replace the variable.
public String getMessageFromTemplate(String fileName, Map<String,String> valuesMap){
       String filePath=templatePath+fileName;
       String content = "";
       try
       {
           content = new String ( Files.readAllBytes( Paths.get(filePath) ) );
       }
       catch (IOException e)
       {
           log.error("Email template file is missing. Java exception: "+e.toString());
       }

       StrSubstitutor sub = new StrSubstitutor(valuesMap);
       return sub.replace(content);
   }
  
//The code in main for test
//Suppose we have a file called helloWorld.stemp and it contains the template

MailMessage mailMess=MailMessage.getInstance();
Map<String, String> valuesMap = new HashMap<String, String>();
valuesMap.put("userName", "pengfei");
valuesMap.put("userMail", "haha@pengfei.org");
String text = mailMess.getMessageFromTemplate("helloWorld.stemp",valuesMap);
System.out.println(text);
</code>

<code>
#The content of the helloWorld.stemp

Dear ${userName},

  This is your registration email : ${userMail}
  
BR

Pengfei.org
</code>


PS, the file template method only works in java 8. If you are using java 7, you need to change Files.readAllBytes( Paths.get(filePath) ) with outputStream and bufferReader for file reading. 