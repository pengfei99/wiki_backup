====== Procedure for Owncloud installation ======
This guide is desgin for centos 7


===== Install dependencies =====

''yum install httpd php php-mysql mariadb-server mariadb sqlite php-dom php-mbstring php-gd php-pdo php-process wget bzip2 mod_ssl openssl''

===== Selinux status =====

''sestatus''

If selinux is enabled, type the following line to allow owncloud to write on the server

''setsebool -P httpd_unified on''


For those who don't want to use selinux, you can disable it

''sudo vim /etc/selinux/config''

Change SELINUX=enforcing to SELINUX=disabled

===== Network setup =====
By default, centos 7 use firewalld, the following command opens http and https to outside world.

''firewall-cmd --permanent --zone=public --add-service=http''

''firewall-cmd --permanent --zone=public --add-service=https''

''firewall-cmd --reload''

===== Configure mariadb and httpd as startup deamon=====

''systemctl enable httpd.service''

''systemctl enable mariadb.service''


====== Install owncloud ======

You can find all owncloud release in this location https://owncloud.org/release-channels/

It's recommanded to use production release.

Download your prefered version.

''wget https://download.owncloud.org/community/owncloud-9.1.1.tar.bz2'' 

Unzip to /var/www/html/

''tar -xjvf owncloud-9.1.1.tar.bz2 -C /var/www/html/''

Change owner of the owncloud folder

''chown -R biodata:bioaster /var/www/html/owncloud''


====== Configuration of DB ======

''mysql_secure_installation'' to set the root password

If it ask you to enter the current root password, just click on enter.

After the initiation, you can connect to the database by using root 

''mysql -u root -p''

Create database for owncloud

''CREATE DATABASE bio_owncloud;''

Create owncloud db user

''GRANT ALL ON bio_owncloud.* TO 'bio_owncloud'@'localhost' IDENTIFIED BY 'password';''

''FLUSH PRIVILEGES;''

Try to connect with bio_owncloud

''mysql -u bio_owncloud -p;''

''use bio_owncloud;''

===== db backup =====

On mysql/mariaDB

<code>
#create backup
mysqldump --single-transaction -h [server] -u [username] [db_name] -p > owncloud-dbbackup_`date +"%Y%m%d"`.bak

# Example 

mysqldump --single-transaction -h localhost -u bio_owncloud bio_owncloud -p > owncloud-dbbackup_`date +"%Y%m%d"`.bak

# restore backup
php occ maintenance:mode --on
mysql -h [server] -u [username] [db_name] -p < owncloud-dbbackup.bak
php occ maintenance:data-fingerprint
php occ maintenance:mode --off

# Example 
mysql -u bio_owncloud -h 134.158.107.136 -P 3328 bio_owncloud -p < owncloud-dbbackup_20181001.bak
</code>

===== reset default admin password =====

<code>
php occ user:resetpassword admin
</code>

===== change data store location =====

If you need to move your ownCloud data directory from its current location to somewhere else, here is a manual process that you can take to make it happen.

This example assumes that:

The current folder is: /var/www/owncloud/data
The new folder is: /mnt/owncloud
Youâ€™re using Apache as your webserver on a centos7 server

<code>
# 1. Stop apache
sudo systemctl stop httpd

# 2. Use rsync to copy data 
rsync -avz /var/www/owncloud/data /mnt/owncloud

# 3. Create a symbolic link from the new directory to the old one
ln -s /mnt/owncloud /var/www/owncloud/data

# 4. Check directory permissions on the new directory

# 5. Update database for new path
# 5.1 Update the oc_storages table
UPDATE oc_storages SET id='local::/mnt/owncloud' WHERE id='local::/var/www/owncloud/data/';
# 5.2 Update the oc_accounts table, because home contains the default location of user home data storage path
+----+-------+-----------+---------------+-----------------+-------+------------+--------------------------+-------------------------------------+-------+
| id | email | user_id   | lower_user_id | display_name    | quota | last_login | backend                  | home                                | state |
+----+-------+-----------+---------------+-----------------+-------+------------+--------------------------+-------------------------------------+-------+
|  9 | NULL  | admin     | admin         | admin           | NULL  | 1538639895 | OC\User\Database         | /var/www/owncloud/data/admin     |     1 |
| 10 | NULL  | pliu      | pliu          | LIU Pengfei     | NULL  | 1538646328 | OCA\User_LDAP\User_Proxy | /var/www/owncloud/data/pliu      |     1 |

# in our case we need to update both for admin and pengfei 
UPDATE oc_accounts SET home='/mnt/owncloud/admin' WHERE id=9;
UPDATE oc_accounts SET home='/mnt/owncloud/pliu' WHERE id=10;

# update the oc_jobs table
# The next area to check is the oc_jobs table. The logrotate process may have hard-coded a non-standard 
# (or old) value for the data path. To check it, run the SQL below and see if any results are returned:

SELECT * FROM oc_jobs WHERE class = 'OC\Log\Rotate';

# If any are, run the SQL below to update them, changing the value as appropriate.
UPDATE oc_jobs SET argument = '/your/new/data/path' WHERE id = <id of the incorrect record>;

# Fix application settings
# One thing worth noting is that individual apps may reference the data directory separate from the core system configuration. If so, then you will need to find which applications do this, and change them as needed.

# For example, if you listed the application configuration by running occ config:list, then you might see output similar to that below:

{
    "apps": {
        "fictitious": {
            "enabled": "yes",
            "installed_version": "2.3.2",
            "types": "filesystem",
            "datadir": "var/www/owncloud/data"
        }
    }
}

# we can reconfigure the app with the following command
php occ config:app:set --value /mnt/owncloud fictitious datadir

# restart the apache server
systemctl restart httpd
</code>

====== Configure apache ======
Create two directory under /etc/httpd/

''mkdir /etc/httpd/sites-available''

''mkdir /etc/httpd/sites-enabled''

put the following owncloud.conf under sites-available


<code>

<VirtualHost *:80>
    ServerName localhost
    ServerAlias localhost
    Redirect permanent / https://localhost/
</VirtualHost>
 
<VirtualHost *:443>
    ServerName localhost
    ServerAlias localhost
    DocumentRoot /var/www/html
 
    php_admin_value session.save_path "/var/lib/php/session/biodata"
 
    SSLEngine       on
    SSLProtocol all -SSLv2
    SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM
 
    SSLCertificateFile      /etc/pki/tls/certs/localhost.crt
    SSLCertificateKeyFile   /etc/pki/tls/private/localhost.key
 
    #SSLVerifyClient none
    #
    #SSLCACertificatePath    configuration/certificates
    #SSLCACertificateFile    configuration/certificates/cacert.pem
 
    <IfModule mod_headers.c>
        Header always set Strict-Transport-Security "max-age=25768000; includeSubDomains; preload"
    </IfModule>

<IfModule mod_alias.c>
   Alias /owncloud /var/www/html/owncloud
</IfModule>
<Directory "/var/www/html/owncloud">
   Options Indexes FollowSymLinks
   AllowOverride All
   Order allow,deny
   allow from all
</Directory>

</VirtualHost>

</code>

Create an alias of owncloud.conf in sites-enabled

''ln -s ../sites-available/owncloud.conf owncloud.conf''


PS : to make user biodata access /var/lib/php/session/biodata, you need to add group apache to user biodata

 ''usermod -a -G apache biodata''

======Httpd Process uid and gid ======

As owncloud will write on GPFS of cc. It requires owncloud run under a specific uid and gid.

''useradd biodata -u 42605''

''groupadd bioaster -g 1072''

''usermod -g bioaster biodata''

If you already have a group called bioaster which gid is not 1072. Change the gid

''groupmod -g NEWGID GROUPNAME''

In our case, it will be 

''groupmod -g 1072 bioaster''

Update all files in old group to new one

''find / -gid OLDGID ! -type l -exec chgrp NEWGID {} \;''

Check user biodata uid and gid

''id biodata''

You should see this ''uid=42605(biodata) gid=1072(bioaster) groups=1072(bioaster)''

Now modify /etc/httpd/conf/httpd.conf

add the followin two lines

'' User biodata ''

'' Group bioaster''

Restart httpd service

''systemctl restart httpd''


To check the httpd process uid and gid 

''ps aux | grep httpd ''

You should see this.

<code>
root      18646  0.0  0.7 445404  7840 ?        Ss   14:04   0:00 /usr/sbin/httpd -DFOREGROUND
biodata   18647  0.0  2.4 562876 24712 ?        S    14:04   0:01 /usr/sbin/httpd -DFOREGROUND
biodata   18648  0.1  2.4 562928 24808 ?        S    14:04   0:02 /usr/sbin/httpd -DFOREGROUND
biodata   18649  0.1  3.5 660612 35904 ?        S    14:04   0:02 /usr/sbin/httpd -DFOREGROUND
biodata   18650  0.0  3.2 570400 32204 ?        S    14:04   0:01 /usr/sbin/httpd -DFOREGROUND
biodata   18651  0.1  3.2 570388 32076 ?        S    14:04   0:02 /usr/sbin/httpd -DFOREGROUND
biodata   18728  0.0  2.7 565988 27764 ?        S    14:04   0:01 /usr/sbin/httpd -DFOREGROUND
biodata   18733  0.0  3.2 657728 32936 ?        S    14:04   0:01 /usr/sbin/httpd -DFOREGROUND
biodata   18734  0.0  2.4 562924 24688 ?        S    14:04   0:01 /usr/sbin/httpd -DFOREGROUND
biodata   18735  0.0  2.2 560872 22636 ?        S    14:04   0:01 /usr/sbin/httpd -DFOREGROUND
biodata   18736  0.0  2.5 563944 25708 ?        S    14:04   0:01 /usr/sbin/httpd -DFOREGROUND

</code>

====== Upgrade php5.4 to php 5.5 ======

PHP 5.4 has been end-of-life since September 2015 and is no longer supported by the PHP team. It is highly recommended to upgrade to PHP 5.5+ for best security and performance.

I decide to upgrade to php 5.5 by using the repo centos-release-scl.

Because it's from the official owncloud document(https://doc.owncloud.org/server/9.0/admin_manual/installation/php_55_installation.html).

Install repo centos-release-scl

''yum install centos-release-scl''

Install php lib

''yum install php55 php55-php php55-php-gd php55-php-mbstring''

Install php mysql lib

''yum install php55-php-mysqlnd''

Disable loading the old PHP Apache modules by changing their names:

<code>
mv /etc/httpd/conf.d/php.conf /etc/httpd/conf.d/php54.off
mv /etc/httpd/conf.modules.d/10-php.conf /etc/httpd/conf.modules.d/10-php54.off
</code>

Copy the PHP 5.5 Apache modules into place:

<code>
cp /opt/rh/httpd24/root/etc/httpd/conf.d/php55-php.conf /etc/httpd/conf.d/
cp /opt/rh/httpd24/root/etc/httpd/conf.modules.d/10-php55-php.conf /etc/httpd/conf.modules.d/
cp /opt/rh/httpd24/root/etc/httpd/modules/libphp55-php5.so /etc/httpd/modules/
</code>

Enable php55 in bath environment

''source /opt/rh/php55/enable''

''php --version''

====== Install php-pecl-apcu module  ======

As we installed the php55, so we can't use the **php-pecl-apcu** anymore.

We need to use **sclo-php55-php-pecl-apcu** package. Do not add new repo, it may generate conflict.

 This sclo-php55-php-pecl-apcu package will add the apcu.so and apcu.ini in /opt/rh/php55/root/etc/php.d

''sudo yum install sclo-php55-php-pecl-apcu''

After installation, You need to edit the apcu.ini.

Put the following line
<code>
    apc.enabled=1
    apc.enable_cli=1
</code>

Now the module is configured

We need ownloud use this module

'' vim /var/www/html/owncloud/conf/config.php''

add the following line

<code>
    'memcache.local' => '\\OC\\Memcache\\APCu',
</code>

====== Add openoffice plugin ======

Download the appropriet lib (document app) for your owncloud version.
 
Use this link https://apps.owncloud.com/content/show.php/Documents?content=168711

Uzip the lib, you will find a folder documents, change the ownership of this folder

''chown -R biodata:bioaster documents''

Change the access rights

''chmod -R 750 documents''

move this folder to /var/www/html/owncloud/apps/

Go to the owncloud web interface,click on the left hand side top, choose apps ,

You will see a new side bar, choose Not enabled, You will see the documents apps

Enable it.

Now we need to install the openoffice

''yum install libreoffice''

<code>

Name        : libreoffice
Arch        : x86_64
Epoch       : 1
Version     : 4.3.7.2
Release     : 5.el7_2.1
Size        : 45 k
Repo        : updates/7/x86_64
Summary     : Free Software Productivity Suite
URL         : http://www.libreoffice.org/
License     : (MPLv1.1 or LGPLv3+) and LGPLv3 and LGPLv2+ and BSD and (MPLv1.1 or GPLv2 or LGPLv2 or
            : Netscape) and Public Domain and ASL 2.0 and Artistic and MPLv2.0 and CC0
Description : LibreOffice is an Open Source, community-developed, office productivity suite.
            : It includes the key desktop applications, such as a word processor,
            : spreadsheet, presentation manager, formula editor and drawing program, with a
            : user interface and feature set similar to other office suites.  Sophisticated
            : and flexible, LibreOffice also works transparently with a variety of file
            : formats, including Microsoft Office File Formats.

</code>

Add 
'''preview_libreoffice_path' => '/usr/bin/libreoffice',''

in /var/www/html/owncloud/config/config.php


Ps, If your selinux is still activate, you need to reset the label 

''restorecon -vR documents/''

after this command, you can check if documents' label looks like other apps label

''ls -Z''

<code>
drwxr-xr-x. biodata bioaster unconfined_u:object_r:httpd_sys_content_t:s0 activity
drwxr-x---. biodata bioaster unconfined_u:object_r:httpd_sys_content_t:s0 documents
drwxr-xr-x. biodata bioaster unconfined_u:object_r:httpd_sys_content_t:s0 encryption
drwxr-xr-x. biodata bioaster unconfined_u:object_r:httpd_sys_content_t:s0 external
</code>

====== Update and recovery ======

[[employes:pengfei.liu:owncloud:upgrade_and_backup|Owncloud upgrade]]


====== Mount webdav ======

[[employes:pengfei.liu:owncloud:mount_webdav|Install owncloud client on centos 7]]

====== Mount nfs/gpfs ======

[[employes:pengfei.liu:admin_system:nfs_gpfs|Montage de l'espace GPFS dans une VM via NFS]]

