====== Microservice Architecture ======

===== Context =====

You are developing a server-side enterprise application. It must support a variety of different clients including desktop browsers, mobile browsers, and native mobile applications. The application might also expose an API for 3rd parties to consume. It might also integrate with other applications via either web services or a message broker. The application handles requests (HTTP requests and messages) by executing business logic; accessing a database; exchanging messages with other systems; and returning an HTML/JSON/XML response. There are logical components corresponding to different functional areas of the application.

===== Solution =====

Define an architecture that structures the application as a set of loosely coupled, collaborating services. This approach corresponds to the Y-axis of the [[employes:pengfei.liu:system_architecture:microservice:scale_cube|The Scale Cube]]. Each service is:

  * Highly maintainable and testable - enables rapid and frequent development and deployment
  * Loosely coupled with other services - enables a team to work independently the majority of time on their service(s) without being impacted by changes to other services and without affecting other services
  * Independently deployable - enables a team to deploy their service without having to coordinate with other teams
  * Capable of being developed by a small team - essential for high productivity by avoiding the high communication head of large teams

Services communicate using either synchronous protocols such as HTTP/REST or asynchronous protocols such as AMQP. Services can be developed and deployed independently of one another. Each service has its own database in order to be decoupled from other services. Data consistency between services is maintained using the [[employes:pengfei.liu:system_architecture:microservice:saga_pattern|The saga pattern]]

To learn more about the nature of a service, please read this article [[employes:pengfei.liu:system_architecture:microservice:service_definition|What is a (micro)service?]].