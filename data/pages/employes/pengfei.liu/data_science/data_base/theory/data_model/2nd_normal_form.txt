====== Second normal form ======

Second normal form (2NF) is a normal form used in database normalization.

To appreciate second normal form, you must understand the idea of functional dependency. A functional dependency is a relationship between or among attributes. One attribute is functionally dependent on another if the value of the second attribute determines the value of the first attribute. If you know the value of the second attribute, you can determine the value of the first attribute.

Suppose, for example, that a table has attributes (columns) StandardCharge, NumberOfTests, and TotalCharge that relate through the following equation:

<code>
TotalCharge = StandardCharge * NumberOfTests
</code>

TotalCharge is functionally dependent on both StandardCharge and NumberOfTests. If you know the values of StandardCharge and NumberOfTests, you can determine the value of TotalCharge.

Every table in first normal form must have a unique primary key. That key may consist of one or more than one column. A key consisting of more than one column is called a composite key. To be in second normal form (2NF), all non-key attributes must depend on the entire key. Thus, every relation that is in 1NF with a single attribute key is automatically in second normal form.

If a relation has a composite key, all non-key attributes must depend on all components of the key. If you have a table where some non-key attributes donâ€™t depend on all components of the key, break the table up into two or more tables so that  in each of the new tables  all non-key attributes depend on all components of the primary key.

Put simply, a relation is in 2NF if 
  * it is in 1NF
  * every non-prime attribute of the relation(table) is dependent on the whole of every candidate key.

===== Example 1 =====

^Manufacturer	^Model	^Model_Full_Name ^Manufacturer Country^
|Forte	|X-Prime	|Forte X-Prime	|Italy|
|Forte	|Ultraclean	|Forte Ultraclean	|Italy|
|Dent-o-Fresh	|EZbrush	|Dent-o-Fresh EZbrush	|USA|
|Kobayashi	|ST-60	|Kobayashi ST-60	|Japan|
|Hoch	|Toothmaster	|Hoch Toothmaster	|Germany|
|Hoch	|X-Prime	|Hoch X-Prime	|Germany|


Even if the designer has specified the primary key as {Model Full Name}, the relation is not in 2NF because of the other candidate keys. {Manufacturer, Model} is also a candidate key, and Manufacturer Country is dependent on a proper subset of it: Manufacturer. To make the design conform to 2NF, it is necessary to have two relations:

Electric toothbrush Manufacturers
^Manufacturer^Manufacturer Country^
|Forte|Italy|
|Dent-o-Fresh|USA|
|Kobayashi|Japan|
|Hoch|Germany|

Electric toothbrush Models

^Manufacturer^Model^Model Full Name^
|Forte|X-Prime|Forte X-Prime|
|Forte|Ultraclean|Forte Ultraclean|
|Dent-o-Fresh|EZbrush|Dent-o-Fresh EZbrush|
|Kobayashi|ST-60|Kobayashi ST-60|
|Hoch|Toothmaster|Hoch Toothmaster|
|Hoch|X-Prime|Hoch X-Prime|

===== Example 2 =====

^Device_ID(Pk)^	Price ^	Supplier_ID(Pk)^Supplier_Name^Supplier_Address^
|65	|59.99	|1	|Stylized Parts|	VA|
|73	|20.00	|1	|Stylized Parts|	VA|
|66	|69.99	|2	|ACME Industries|	CA|

The above table does not have duplicate data in one column, so it's 1st NF, The price is dependent on device_id, Supplier_ID is also dependent on device_id, but supplier_name and address are not dependent on device_id, but only dependent on supplier_ID. So it's not 2nd NF, to transform it into 2nd NF, we need to divide it into two tables. 

^Device_ID(Pk)^	Price ^	Supplier_ID(Pk)^
|65	|59.99	|1	|
|73	|20.00	|1	|
|66	|69.99	|2	|

^Supplier_ID(Pk)^Supplier_Name^Supplier_Address^
|1	|Stylized Parts|	VA|
|2	|ACME Industries|	CA|