a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1588679776;s:8:"modified";i:1588754390;}s:7:"creator";s:11:"pengfei liu";s:4:"user";s:4:"pliu";s:11:"last_change";a:8:{s:4:"date";i:1588754390;s:2:"ip";s:14:"213.44.168.220";s:4:"type";s:1:"E";s:2:"id";s:43:"employes:pengfei.liu:java:java_memory_model";s:4:"user";s:4:"pliu";s:3:"sum";s:34:"[2. Hardware memory architecture] ";s:5:"extra";s:0:"";s:10:"sizechange";i:3363;}s:11:"contributor";a:1:{s:4:"pliu";s:11:"pengfei liu";}s:5:"title";s:17:"Java Memory Model";s:11:"description";a:2:{s:15:"tableofcontents";a:11:{i:0;a:4:{s:3:"hid";s:17:"java_memory_model";s:5:"title";s:17:"Java Memory Model";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:36:"summary_of_jvm_memory_configurations";s:5:"title";s:36:"Summary of JVM memory configurations";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:17:"jvm_memory_spaces";s:5:"title";s:20:"1. JVM memory spaces";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:11:"heap_memory";s:5:"title";s:15:"1.1 Heap Memory";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:15:"non-heap_memory";s:5:"title";s:19:"1.2 Non-Heap memory";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:5;a:4:{s:3:"hid";s:12:"cache_memory";s:5:"title";s:16:"1.3 Cache Memory";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:6;a:4:{s:3:"hid";s:12:"stack_memory";s:5:"title";s:16:"1.4 Stack Memory";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:7;a:4:{s:3:"hid";s:28:"hardware_memory_architecture";s:5:"title";s:31:"2. Hardware memory architecture";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:8;a:4:{s:3:"hid";s:83:"bridging_the_gap_between_the_java_memory_model_and_the_hardware_memory_architecture";s:5:"title";s:86:"3. Bridging The Gap Between The Java Memory Model And The Hardware Memory Architecture";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:9;a:4:{s:3:"hid";s:28:"visibility_of_shared_objects";s:5:"title";s:32:"3.1 Visibility of Shared Objects";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:10;a:4:{s:3:"hid";s:15:"race_conditions";s:5:"title";s:19:"3.2 Race Conditions";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:276:"Java Memory Model

Understanding the Java Memory Model is essential for learning how to develop, deploy, monitor, test, and tune the performance of a Java application.

JVM consumes the available space on your host OS memory just like any other software. See the below figure.";}s:8:"relation";a:2:{s:5:"media";a:7:{s:40:"employes:pengfei.liu:java:jvm_memory.png";b:1;s:55:"employes:pengfei.liu:java:jvm_memory_key_components.png";b:1;s:41:"employes:pengfei.liu:java:heap_memory.png";b:1;s:43:"employes:pengfei.liu:java:stack_vs_heap.png";b:1;s:48:"employes:pengfei.liu:java:stack_heap_example.jpg";b:1;s:51:"employes:pengfei.liu:java:hardware_memory_model.png";b:1;s:49:"employes:pengfei.liu:java:variable_visibility.png";b:1;}s:10:"firstimage";s:40:"employes:pengfei.liu:java:jvm_memory.png";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1588679776;s:8:"modified";i:1588754390;}s:7:"creator";s:11:"pengfei liu";s:4:"user";s:4:"pliu";s:11:"last_change";a:8:{s:4:"date";i:1588754390;s:2:"ip";s:14:"213.44.168.220";s:4:"type";s:1:"E";s:2:"id";s:43:"employes:pengfei.liu:java:java_memory_model";s:4:"user";s:4:"pliu";s:3:"sum";s:34:"[2. Hardware memory architecture] ";s:5:"extra";s:0:"";s:10:"sizechange";i:3363;}s:11:"contributor";a:1:{s:4:"pliu";s:11:"pengfei liu";}}}