a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1588844593;s:8:"modified";i:1592385938;}s:7:"creator";s:11:"pengfei liu";s:4:"user";s:4:"pliu";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:4:"pliu";s:11:"pengfei liu";}s:5:"title";s:37:"Understanding Java Garbage Collection";s:11:"description";a:2:{s:15:"tableofcontents";a:20:{i:0;a:4:{s:3:"hid";s:37:"understanding_java_garbage_collection";s:5:"title";s:37:"Understanding Java Garbage Collection";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:12:"how_gc_works";s:5:"title";s:15:"1. How GC works";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:26:"reachabiility_of_an_object";s:5:"title";s:30:"1.1 Reachabiility of an object";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:3;a:4:{s:3:"hid";s:37:"a_simple_approach_to_describe_java_gc";s:5:"title";s:41:"1.2 A simple approach to describe Java GC";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:38:"mark_and_sweep_implementation_strategy";s:5:"title";s:42:"1.3 Mark and Sweep implementation strategy";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:5;a:4:{s:3:"hid";s:29:"java_garbage_collection_roots";s:5:"title";s:33:"1.4 Java Garbage Collection Roots";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:6;a:4:{s:3:"hid";s:33:"advantage_and_disadvantages_of_gc";s:5:"title";s:35:"2 Advantage and disadvantages of GC";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:7;a:4:{s:3:"hid";s:10:"advantages";s:5:"title";s:15:"2.1 Advantages:";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:8;a:4:{s:3:"hid";s:13:"disadvantages";s:5:"title";s:18:"2.2 Disadvantages:";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:9;a:4:{s:3:"hid";s:23:"java_garbage_collectors";s:5:"title";s:25:"3.Java Garbage Collectors";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:10;a:4:{s:3:"hid";s:47:"implementation_strategies_in_garbage_collection";s:5:"title";s:51:"3.1 Implementation strategies in garbage collection";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:11;a:4:{s:3:"hid";s:38:"seven_types_of_java_garbage_collectors";s:5:"title";s:42:"3.2 Seven Types of JAVA Garbage Collectors";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:12;a:4:{s:3:"hid";s:11:"memory_leak";s:5:"title";s:14:"4. Memory leak";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:13;a:4:{s:3:"hid";s:55:"the_life_cycle_of_an_object_in_java_before_and_after_gc";s:5:"title";s:60:"5. the Life Cycle of an Object in Java (before and after GC)";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:14;a:4:{s:3:"hid";s:13:"class_loading";s:5:"title";s:17:"5.1 Class loading";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:15;a:4:{s:3:"hid";s:15:"object_creation";s:5:"title";s:19:"5.2 Object creation";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:16;a:4:{s:3:"hid";s:14:"object_running";s:5:"title";s:18:"5.3 Object running";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:17;a:4:{s:3:"hid";s:15:"object_deletion";s:5:"title";s:19:"5.4 Object deletion";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:18;a:4:{s:3:"hid";s:32:"other_jvm_memory_tunning_options";s:5:"title";s:35:"6. Other JVM memory tunning options";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:19;a:4:{s:3:"hid";s:42:"removing_duplicating_string_in_heap_memory";s:5:"title";s:46:"6.1 Removing duplicating string in heap memory";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:478:"Understanding Java Garbage Collection

Java garbage collection is the process by which Java programs perform automatic memory management. Java programs compile to bytecode that can be run on a Java Virtual Machine(JVM). When Java programs run on the JVM, objects are created on the heap, which is a portion of memory dedicated to the program. Eventually, some objects will no longer be needed. The garbage collector finds these unused objects and deletes them to free up memory.";}s:8:"relation";a:3:{s:5:"media";a:4:{s:46:"employes:pengfei.liu:java:isolation_island.png";b:1;s:38:"employes:pengfei.liu:java:gc_roots.png";b:1;s:36:"employes:pengfei.liu:java:gc_old.png";b:1;s:35:"employes:pengfei.liu:java:gc_g1.png";b:1;}s:10:"references";a:1:{s:43:"employes:pengfei.liu:java:java_memory_model";b:1;}s:10:"firstimage";s:46:"employes:pengfei.liu:java:isolation_island.png";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1588844593;s:8:"modified";i:1592385938;}s:7:"creator";s:11:"pengfei liu";s:4:"user";s:4:"pliu";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:4:"pliu";s:11:"pengfei liu";}}}