a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1561545666;s:8:"modified";i:1561555104;}s:7:"creator";s:11:"pengfei liu";s:4:"user";s:4:"pliu";s:11:"last_change";a:8:{s:4:"date";i:1561555104;s:2:"ip";s:13:"46.218.31.186";s:4:"type";s:1:"E";s:2:"id";s:66:"employes:pengfei.liu:system_architecture:microservice:saga_pattern";s:4:"user";s:4:"pliu";s:3:"sum";s:19:"[Related patterns] ";s:5:"extra";s:0:"";s:10:"sizechange";i:160;}s:11:"contributor";a:1:{s:4:"pliu";s:11:"pengfei liu";}s:5:"title";s:16:"The saga pattern";s:11:"description";a:2:{s:15:"tableofcontents";a:7:{i:0;a:4:{s:3:"hid";s:16:"the_saga_pattern";s:5:"title";s:16:"The saga pattern";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:7:"context";s:5:"title";s:7:"Context";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:8:"solution";s:5:"title";s:8:"Solution";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:17:"saga_coordination";s:5:"title";s:17:"Saga coordination";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:10:"conclusion";s:5:"title";s:10:"Conclusion";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:5;a:4:{s:3:"hid";s:16:"related_patterns";s:5:"title";s:16:"Related patterns";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:6;a:4:{s:3:"hid";s:12:"code_example";s:5:"title";s:12:"Code Example";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:503:"The saga pattern

Context

You have applied the The Database per Service pattern. Each service has its own database. Some business transactions, however, span multiple services, so you need a mechanism to ensure data consistency across services. For example, let's imagine that you are building an e-commerce store where customers have a credit limit. The application must ensure that a new order will not exceed the customer's credit limit. Orders and Customers are in different databases, the appliâ€¦";}s:8:"relation";a:2:{s:10:"references";a:3:{s:74:"employes:pengfei.liu:system_architecture:microservice:database_per_service";b:1;s:68:"employes:pengfei.liu:system_architecture:microservice:event_sourcing";b:1;s:72:"employes:pengfei.liu:system_architecture:microservice:application_events";b:1;}s:10:"firstimage";s:0:"";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1561545666;s:8:"modified";i:1561555104;}s:7:"creator";s:11:"pengfei liu";s:4:"user";s:4:"pliu";s:11:"last_change";a:8:{s:4:"date";i:1561555104;s:2:"ip";s:13:"46.218.31.186";s:4:"type";s:1:"E";s:2:"id";s:66:"employes:pengfei.liu:system_architecture:microservice:saga_pattern";s:4:"user";s:4:"pliu";s:3:"sum";s:19:"[Related patterns] ";s:5:"extra";s:0:"";s:10:"sizechange";i:160;}s:11:"contributor";a:1:{s:4:"pliu";s:11:"pengfei liu";}}}