a:317:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:32:"ZooKeeper 04: The ZooKeeper ACLs";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:"ZooKeeper's data model provides a mechanism to control access to znodes using ";}i:2;i:49;}i:5;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:127;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:150:". While creating a znode, the ACLs determine the permissions with respect to the various operations that you can perform on the znodes. The ZooKeeper ";}i:2;i:130;}i:7;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:280;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:" model is similar to the Unix/Linux file permissions in terms of permitting or preventing operations. ";}i:2;i:283;}i:9;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:385;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:"It also uses permission bits to permit or prevent access on Znode";}i:2;i:387;}i:11;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:452;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:". However, the ZooKeeper node ";}i:2;i:454;}i:13;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:484;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"doesn't have the concept of ownership";}i:2;i:486;}i:15;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:523;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:". ACLs are determined on the basis of the authentication mechanism of the client and the ZooKeeper service.";}i:2;i:525;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:632;}i:18;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:634;}i:19;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"4.1 Client authentication";i:1;i:2;i:2;i:634;}i:2;i:634;}i:20;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:634;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:634;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:"Because ZooKeeper needs to deal with Humain and machine clients. So it uses a system called ";}i:2;i:673;}i:23;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:765;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"Scheme:ID";}i:2;i:767;}i:25;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:776;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" to identify a client.";}i:2;i:778;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:800;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:800;}i:29;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:802;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"Scheme";}i:2;i:804;}i:31;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:810;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:" defines the types of Client, it has the following possible value:";}i:2;i:812;}i:33;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:878;}i:34;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:878;}i:35;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:878;}i:36;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:878;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:" World scheme: This represents anyone who is connecting to the ZooKeeper service";}i:2;i:882;}i:38;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:962;}i:39;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:962;}i:40;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:962;}i:41;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:962;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:" Auth scheme: This represents any authenticated user, but doesn't use any ID";}i:2;i:966;}i:43;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1042;}i:44;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1042;}i:45;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1042;}i:46;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1042;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:" Digest scheme: This represents the username and password way of authentication";}i:2;i:1046;}i:48;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1125;}i:49;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1125;}i:50;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1125;}i:51;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1125;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:" IP scheme: This represents authentication with the IP address of the client";}i:2;i:1129;}i:53;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1205;}i:54;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1205;}i:55;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1205;}i:56;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1205;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:" Host scheme: This represents anyone within the same hosting server";}i:2;i:1209;}i:58;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1276;}i:59;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1276;}i:60;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1276;}i:61;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1276;}i:62;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1278;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"ID";}i:2;i:1280;}i:64;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1282;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" is the id of the client based on the ";}i:2;i:1284;}i:66;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1322;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"scheme";}i:2;i:1324;}i:68;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1330;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:". ";}i:2;i:1332;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1334;}i:71;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1338;}i:72;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"4.1.1 World scheme";i:1;i:3;i:2;i:1338;}i:2;i:1338;}i:73;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1338;}i:74;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1338;}i:75;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1368;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"World scheme";}i:2;i:1370;}i:77;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1382;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:" has only one ID (anyone). This represents any user in the world. For example, we type in the following command to set the znode accessible by anyone. Here ";}i:2;i:1384;}i:79;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1540;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"crdwa";}i:2;i:1542;}i:81;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1547;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:" is the permission associated with the client. Check section 4.2 to see the permission details.";}i:2;i:1549;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1644;}i:84;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:102:"
# It means anyone can do create/read/write/delete/admin on Znode /tmp
setAcl /tmp world:anyone:crdwa
";i:1;N;i:2;N;}i:2;i:1652;}i:85;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1764;}i:86;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"4.1.2 Auth scheme";i:1;i:3;i:2;i:1764;}i:2;i:1764;}i:87;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1764;}i:88;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1764;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"Auth scheme represents any authenticated users, so no need to use any ID. ";}i:2;i:1793;}i:90;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1867;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"But in practice, if you try to set ";}i:2;i:1869;}i:92;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:1904;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" on a znode using auth scheme and not provide any ID";}i:2;i:1907;}i:94;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1959;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:", it tells you that is not a valid ID, or some form of ID is needed.";}i:2;i:1961;}i:96;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2029;}i:97;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:59:"
# This will raise an error message
setAcl /tmp auth:crdwa
";i:1;N;i:2;N;}i:2;i:2036;}i:98;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2036;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"To do it correctly we need to add user name and password to the command";}i:2;i:2105;}i:100;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2182;}i:101;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:127:"
# It means an authenticated user can do create/read/write/delete/admin on Znode /tmp
setAcl /tmp auth:username:password:crdwa
";i:1;N;i:2;N;}i:2;i:2182;}i:102;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2182;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:111:"The above command still throws error, because the username and password are never registered in the zookeeper. ";}i:2;i:2319;}i:104;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2430;}i:105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2430;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"To register a username/pwd pair, we need to use ";}i:2;i:2432;}i:107;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2480;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"addauth";}i:2;i:2482;}i:109;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:2489;}i:110;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:" Command. Suppose we have two username/pwd paires: toto:pwd1, titi:pwd2 ";}i:2;i:2491;}i:111;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2563;}i:112;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:154:"
# general form 
addauth digest <username>:<pwd>

# example 1
addauth digest toto:pwd1

# example 2, the znode name is optionnal
addauth digest titi:pwd2
";i:1;N;i:2;N;}i:2;i:2570;}i:113;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2570;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"Now we can setacl with the id toto or titi";}i:2;i:2734;}i:115;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2776;}i:116;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:448:"
# set acl to /tmp
setAcl /tmp auth:toto:pwd1:crdwa

# if we login with another client and try to access /tmp, you receive the following message
[zk: 127.0.0.1:2181(CONNECTED) 0] get /tmp
org.apache.zookeeper.KeeperException$NoAuthException: KeeperErrorCode = NoAuth for /tmp

# if you do a getAcl
[zk: 127.0.0.1:2181(CONNECTED) 3] getAcl /tmp
'digest,'titi:tXE6n5rWxi3HOpV0Td9wTswRkDs=
: cdrwa
'digest,'toto:zTPgpkViifORWafT6PF+xAjvKgw=
: cdrwa


";i:1;N;i:2;N;}i:2;i:2783;}i:117;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3241;}i:118;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"4.1.3 Digest Scheme";i:1;i:3;i:2;i:3241;}i:2;i:3241;}i:119;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3241;}i:120;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3241;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:306:"Digest scheme represents an individual user with authentication. This uses username:password string that is hashed using the SHA-1 hashing algorithm, and that hashed string is in turn base64 encoded. According to the ZooKeeper website, it is stated that the MD5 hash of <username>:<password> is used as an ";}i:2;i:3272;}i:122;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:3578;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" ID identity. ";}i:2;i:3581;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3595;}i:125;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:179:"
# set acl by using digest scheme, you don't need to register the username/pwd anymore. The digest will do it 
setAcl /tmp digest:tata:pwd3:crdwa

# check the new acl
getAcl /tmp
";i:1;N;i:2;N;}i:2;i:3602;}i:126;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3792;}i:127;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"4.1.4 Host Scheme";i:1;i:3;i:2;i:3792;}i:2;i:3792;}i:128;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3792;}i:129;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3792;}i:130;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"It uses the postfix of the host ";}i:2;i:3821;}i:131;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"URL";}i:2;i:3853;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:" to check the permission. For example, if we set the following acl";}i:2;i:3856;}i:133;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3922;}i:134;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:158:"
setAcl /tmp host:pengfei.com:crwda

# if a client connect to zk with host:host2.pengfei.org, it will be permitted, but host:host3.centos.org will be denied.
";i:1;N;i:2;N;}i:2;i:3929;}i:135;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4097;}i:136;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"4.1.5 IP Scheme";i:1;i:3;i:2;i:4097;}i:2;i:4097;}i:137;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4097;}i:138;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4097;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:"IP scheme represents any user within the same IP address.";}i:2;i:4123;}i:140;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4180;}i:141;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:32:"
setAcl /tmp ip:127.0.0.1:crdwa
";i:1;N;i:2;N;}i:2;i:4187;}i:142;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4230;}i:143;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:29:"4.2 ZooKeeper ACL permissions";i:1;i:2;i:2;i:4230;}i:2;i:4230;}i:144;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4230;}i:145;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4230;}i:146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"ZooKeeper ";}i:2;i:4273;}i:147;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:4283;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" has the following permissions:";}i:2;i:4286;}i:149;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4318;}i:150;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:6;i:2;i:4319;}i:2;i:4318;}i:151;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:4318;}i:152;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4318;}i:153;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4318;}i:154;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Permission ";}i:2;i:4320;}i:155;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:4331;}i:156;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4331;}i:157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" Definition";}i:2;i:4332;}i:158;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:4343;}i:159;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4344;}i:160;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:4344;}i:161;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4344;}i:162;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4344;}i:163;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" Create ";}i:2;i:4346;}i:164;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4354;}i:165;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4354;}i:166;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" Creation of Znode";}i:2;i:4355;}i:167;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4373;}i:168;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4374;}i:169;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4374;}i:170;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4374;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" Read ";}i:2;i:4376;}i:172;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4382;}i:173;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4382;}i:174;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:" Read data of a Znode or list all children node of a Znode";}i:2;i:4383;}i:175;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4441;}i:176;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4442;}i:177;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4442;}i:178;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4442;}i:179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" Write ";}i:2;i:4444;}i:180;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4451;}i:181;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4451;}i:182;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" Write data of a Znode ";}i:2;i:4452;}i:183;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4475;}i:184;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4476;}i:185;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4476;}i:186;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4476;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" Delete ";}i:2;i:4478;}i:188;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4486;}i:189;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4486;}i:190;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" Deletion of a Znode";}i:2;i:4487;}i:191;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4507;}i:192;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4508;}i:193;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:4508;}i:194;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4508;}i:195;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" Admin ";}i:2;i:4510;}i:196;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4517;}i:197;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4517;}i:198;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" Modify the ";}i:2;i:4518;}i:199;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:4530;}i:200;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" of a Znode ";}i:2;i:4533;}i:201;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4545;}i:202;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4547;}i:203;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:4547;}i:2;i:4547;}i:204;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4550;}i:205;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:39:"4.3 Pluggable authentication and scheme";i:1;i:2;i:2;i:4550;}i:2;i:4550;}i:206;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4550;}i:207;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4550;}i:208;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:320:"In addition to the authentication schemes mentioned in the preceding list, ZooKeeper also supports a pluggable authentication mechanism, which makes it possible to integrate third-party authentication schemes if needed. Any authentication schemes in ZooKeeper consist of the following two main authentication operations:";}i:2;i:4603;}i:209;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4923;}i:210;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:4923;}i:211;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4923;}i:212;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4923;}i:213;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:194:" Firstly, the authentication framework in ZooKeeper authenticates the client. The client authentication occurs when the client connects to the ZooKeeper service by validating client information.";}i:2;i:4927;}i:214;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5121;}i:215;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5121;}i:216;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5121;}i:217;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5121;}i:218;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:" Secondly, the authentication framework finds the entries in the ";}i:2;i:5125;}i:219;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:5190;}i:220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:", which correspond to the client. ";}i:2;i:5193;}i:221;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:5227;}i:222;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:" entries are pairs that consist of <IDs, Permissions> pairs, where IDs are some strings that identify the client.";}i:2;i:5230;}i:223;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5343;}i:224;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5343;}i:225;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:5343;}i:226;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5343;}i:227;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:131:"SASL kerberos authentication is a popular authentication for zookeeper. For more information on how to configure it, please visit: ";}i:2;i:5345;}i:228;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:94:"https://docs.cloudera.com/documentation/enterprise/5-3-x/topics/cdh_sg_zookeeper_security.html";i:1;N;}i:2;i:5476;}i:229;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5570;}i:230;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5572;}i:231;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:39:"4.4 ACL does not propagate to the child";i:1;i:2;i:2;i:5572;}i:2;i:5572;}i:232;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5572;}i:233;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5572;}i:234;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"An important point about znode ACLs is that the A";}i:2;i:5625;}i:235;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:5674;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"CL associated with a particular znode doesn't propagate to its children";}i:2;i:5676;}i:237;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:5747;}i:238;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:220:". A client's authentication with ZooKeeper is optional; if the ACLs associated with a znode require a client to authenticate, then it must authenticate using any of the previously mentioned authentication mechanisms. An ";}i:2;i:5749;}i:239;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:5969;}i:240;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:" is the combination of an authentication mechanism, an identity for that mechanism, and a set of permissions.";}i:2;i:5972;}i:241;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6081;}i:242;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6083;}i:243;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"4.5 Predefined ACL";i:1;i:2;i:2;i:6083;}i:2;i:6083;}i:244;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:6083;}i:245;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6083;}i:246;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"There are a number of predefined ACLs in ZooKeeper. These IDs, as defined by ZooKeeper ACLs, are shown in the following table:";}i:2;i:6115;}i:247;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6241;}i:248;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:6;i:2;i:6242;}i:2;i:6241;}i:249;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:6241;}i:250;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:6241;}i:251;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6241;}i:252;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6243;}i:253;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" ID ";}i:2;i:6246;}i:254;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:6250;}i:255;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6250;}i:256;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6251;}i:257;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6252;}i:258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" Description ";}i:2;i:6255;}i:259;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:6268;}i:260;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:6269;}i:261;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:6269;}i:262;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:6269;}i:263;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6269;}i:264;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" ANYONE_ID_UNSAFE ";}i:2;i:6271;}i:265;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6289;}i:266;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6289;}i:267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" This ID represents anyone";}i:2;i:6290;}i:268;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6316;}i:269;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:6317;}i:270;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:6317;}i:271;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6317;}i:272;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" AUTH_IDS ";}i:2;i:6319;}i:273;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6329;}i:274;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6329;}i:275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:" This is used to set ACLs, which get substituted with the IDs of the authenticated client ";}i:2;i:6330;}i:276;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6420;}i:277;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:6421;}i:278;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:6421;}i:279;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6421;}i:280;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" OPEN_";}i:2;i:6423;}i:281;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6429;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"_UNSAFE ";}i:2;i:6432;}i:283;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6440;}i:284;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6440;}i:285;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" This denotes a completely open ";}i:2;i:6441;}i:286;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6473;}i:287;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:", and grants all permissions except the ADMIN permission ";}i:2;i:6476;}i:288;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6533;}i:289;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:6534;}i:290;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:6534;}i:291;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6534;}i:292;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" CREATOR_ALL_";}i:2;i:6536;}i:293;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6549;}i:294;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6552;}i:295;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6553;}i:296;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6553;}i:297;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" This ";}i:2;i:6554;}i:298;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6560;}i:299;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:" grants all the permissions to the creator of the znode ";}i:2;i:6563;}i:300;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6619;}i:301;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:6620;}i:302;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:6620;}i:303;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6620;}i:304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" READ_";}i:2;i:6622;}i:305;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6628;}i:306;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"_UNSAFE ";}i:2;i:6631;}i:307;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6639;}i:308;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:6639;}i:309;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" This ";}i:2;i:6640;}i:310;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"ACL";}i:2;i:6646;}i:311;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" gives the world the ability to read ";}i:2;i:6649;}i:312;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:6686;}i:313;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:6687;}i:314;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:6687;}i:2;i:6687;}i:315;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6688;}i:316;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:6688;}}