# PostgreSQL Client Authentication Configuration File
# ===================================================
#
# Refer to the &quot;Client Authentication&quot; section in the PostgreSQL
# documentation for a complete description of this file.  A short
# synopsis follows.
#
# This file controls: which hosts are allowed to connect, how clients
# are authenticated, which PostgreSQL user names they can use, which
# databases they can access.  Records take one of these forms:
#
# local      DATABASE  USER  METHOD  [OPTIONS]
# host       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
# hostssl    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
# hostnossl  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
#
# (The uppercase items must be replaced by actual values.)
#
# The first field is the connection type: &quot;local&quot; is a Unix-domain
# socket, &quot;host&quot; is either a plain or SSL-encrypted TCP/IP socket,
# &quot;hostssl&quot; is an SSL-encrypted TCP/IP socket, and &quot;hostnossl&quot; is a
# plain TCP/IP socket.
#
# DATABASE can be &quot;all&quot;, &quot;sameuser&quot;, &quot;samerole&quot;, &quot;replication&quot;, a
# database name, or a comma-separated list thereof. The &quot;all&quot;
# keyword does not match &quot;replication&quot;. Access to replication
# must be enabled in a separate record (see example below).
#
# USER can be &quot;all&quot;, a user name, a group name prefixed with &quot;+&quot;, or a
# comma-separated list thereof.  In both the DATABASE and USER fields
# you can also write a file name prefixed with &quot;@&quot; to include names
# from a separate file.
#
# ADDRESS specifies the set of hosts the record matches.  It can be a
# host name, or it is made up of an IP address and a CIDR mask that is
# an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that
# specifies the number of significant bits in the mask.  A host name
# that starts with a dot (.) matches a suffix of the actual host name.
# Alternatively, you can write an IP address and netmask in separate
# columns to specify the set of hosts.  Instead of a CIDR-address, you
# can write &quot;samehost&quot; to match any of the server's own IP addresses,
# or &quot;samenet&quot; to match any address in any subnet that the server is
# directly connected to.
#
# METHOD can be &quot;trust&quot;, &quot;reject&quot;, &quot;md5&quot;, &quot;password&quot;, &quot;gss&quot;, &quot;sspi&quot;,
# &quot;krb5&quot;, &quot;ident&quot;, &quot;peer&quot;, &quot;pam&quot;, &quot;ldap&quot;, &quot;radius&quot; or &quot;cert&quot;.  Note that
# &quot;password&quot; sends passwords in clear text; &quot;md5&quot; is preferred since
# it sends encrypted passwords.
#
# OPTIONS are a set of options for the authentication in the format
# NAME=VALUE.  The available options depend on the different
# authentication methods -- refer to the &quot;Client Authentication&quot;
# section in the documentation for a list of which options are
# available for which authentication methods.
#
# Database and user names containing spaces, commas, quotes and other
# special characters must be quoted.  Quoting one of the keywords
# &quot;all&quot;, &quot;sameuser&quot;, &quot;samerole&quot; or &quot;replication&quot; makes the name lose
# its special character, and just match a database or username with
# that name.
#
# This file is read on server startup and when the postmaster receives
# a SIGHUP signal.  If you edit the file on a running system, you have
# to SIGHUP the postmaster for the changes to take effect.  You can
# use &quot;pg_ctl reload&quot; to do that.
&nbsp;
# Put your actual configuration here
# ----------------------------------
#
# If you want to allow non-local connections, you need to add more
# &quot;host&quot; records.  In that case you will also need to make PostgreSQL
# listen on a non-local interface via the listen_addresses
# configuration parameter, or via the -i or -h command line switches.
&nbsp;
&nbsp;
&nbsp;
# TYPE  DATABASE        USER            ADDRESS                 METHOD
&nbsp;
# &quot;local&quot; is for Unix domain socket connections only
local   all             all                                     peer
# IPv4 local connections:
host    all             all             127.0.0.1/32            ident
# IPv6 local connections:
host    all             all             ::1/128                 ident
# Allow replication connections from localhost, by a user with the
# replication privilege.
#local   replication     postgres                                peer
#host    replication     postgres        127.0.0.1/32            ident
#host    replication     postgres        ::1/128                 ident