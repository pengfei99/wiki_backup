
<h1 class="sectionedit1" id="symfony">Symfony</h1>
<div class="level1">

<p>
<a href="http://symfony.com" class="urlextern" title="http://symfony.com"  rel="nofollow">Symfony</a> est un ensemble de composants réutilisables pour PHP qui permet de déployer rapidement des applications web. 
</p>

</div>
<!-- EDIT1 SECTION "Symfony" [1-167] -->
<h2 class="sectionedit2" id="creer_un_projet">Créer un projet</h2>
<div class="level2">

<p>
Avant de démarrer un projet, assurez vous de connaitre <a href="/informatique/developpement/developpement_de_projet" class="wikilink1" title="informatique:developpement:developpement_de_projet">les bonnes pratiques de développement de projet</a>.
</p>

<p>
Installer l&#039;outils <code>symfony</code> :
</p>
<pre class="code">  $ curl -LsS http://symfony.com/installer &gt; symfony.phar
  $ mv symfony.phar ~/bin/symfony
  $ chmod a+x ~/bin/symfony</pre>

<p>
Créer le squelette de l&#039;application :
</p>
<pre class="code">  $ symfony new mon_application</pre>

<p>
Supprimer le bundle de démo :
</p>
<pre class="code">  A default bundle, AcmeDemoBundle, shows you Symfony2 in action. After playing with it, you can remove it by following these steps:
   * delete the src/Acme directory;
   * remove the routing entries referencing AcmeBundle in app/config/routing_dev.yml;
   * remove the AcmeBundle from the registered bundles in app/AppKernel.php.</pre>

</div>
<!-- EDIT2 SECTION "Créer un projet" [168-942] -->
<h2 class="sectionedit3" id="connecter_une_base_de_donnees">Connecter une base de données</h2>
<div class="level2">
<pre class="code">  $ composer require propel/propel-bundle &quot;~2.0@dev&quot;</pre>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=0" title="Download Snippet" class="mediafile mf_php">app/AppKernel.php</a></dt>
<dd><pre class="code php"><span class="re0">$bundles</span> <span class="sy0">=</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span>
    <span class="co1">// …</span>
    <span class="kw2">new</span> Propel\PropelBundle\PropelBundle<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span>
<span class="br0">&#41;</span><span class="sy0">;</span></pre>
</dd></dl>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=1" title="Download Snippet" class="mediafile mf_yml">app/config/parameters.yml</a></dt>
<dd><pre class="code yml">parameters:
    database_driver: pdo_mysql
    database_host: 127.0.0.1
    database_port: null
    database_name: mon_application
    database_user: utilisateur
    database_password: mon_mot_de_passe
    mailer_transport: smtp
    mailer_host: 127.0.0.1
    mailer_user: null
    mailer_password: null
    locale: en
    secret: xyz</pre>
</dd></dl>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=2" title="Download Snippet" class="mediafile mf_yml">app/config/config.yml</a></dt>
<dd><pre class="code yml">propel:
    dbal:
        driver:               %database_driver%
        user:                 %database_user%
        password:             %database_password%
        dsn:                  %database_driver%:host=%database_host%;dbname=%database_name%;charset=UTF8
        options:              {}
        attributes:           {}</pre>
</dd></dl>
<pre class="code">  $ mkdir -p src/AppBundle/Resources/config</pre>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=3" title="Download Snippet" class="mediafile mf_xml">src/AppBundle/Resources/config/schema.xml</a></dt>
<dd><pre class="code xml"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;UTF-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;database</span> <span class="re0">name</span>=<span class="st0">&quot;default&quot;</span> <span class="re0">namespace</span>=<span class="st0">&quot;AppBundle\Model&quot;</span> <span class="re0">defaultIdMethod</span>=<span class="st0">&quot;native&quot;</span><span class="re2">&gt;</span></span>
<span class="sc3"><span class="re1">&lt;/database<span class="re2">&gt;</span></span></span></pre>
</dd></dl>
<pre class="code">  $ php app/console propel:database:create
  Use connection named default in dev environment.
  Database mon_application has been created.
  $ php app/console propel:build</pre>

</div>
<!-- EDIT3 SECTION "Connecter une base de données" [943-2332] -->
<h2 class="sectionedit4" id="travailler_avec_la_base_de_donnees">Travailler avec la base de données</h2>
<div class="level2">
<pre class="code">  $ vim src/AppBundle/Resources/config/schema.xml</pre>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=4" title="Download Snippet" class="mediafile mf_xml">src/AppBundle/Resources/config/schema.xml</a></dt>
<dd><pre class="code xml"><span class="sc3"><span class="re1">&lt;?xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;UTF-8&quot;</span><span class="re2">?&gt;</span></span>
<span class="sc3"><span class="re1">&lt;database</span> <span class="re0">name</span>=<span class="st0">&quot;default&quot;</span> <span class="re0">namespace</span>=<span class="st0">&quot;AppBundle\Model&quot;</span> <span class="re0">defaultIdMethod</span>=<span class="st0">&quot;native&quot;</span><span class="re2">&gt;</span></span>
&nbsp;
    <span class="sc3"><span class="re1">&lt;table</span> <span class="re0">name</span>=<span class="st0">&quot;user&quot;</span><span class="re2">&gt;</span></span>
        <span class="sc3"><span class="re1">&lt;column</span> <span class="re0">name</span>=<span class="st0">&quot;id&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;integer&quot;</span> <span class="re0">required</span>=<span class="st0">&quot;true&quot;</span> <span class="re0">primaryKey</span>=<span class="st0">&quot;true&quot;</span> <span class="re0">autoIncrement</span>=<span class="st0">&quot;true&quot;</span> <span class="re2">/&gt;</span></span>
        <span class="sc3"><span class="re1">&lt;column</span> <span class="re0">name</span>=<span class="st0">&quot;first_name&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;varchar&quot;</span> <span class="re0">size</span>=<span class="st0">&quot;100&quot;</span> <span class="re2">/&gt;</span></span>
        <span class="sc3"><span class="re1">&lt;column</span> <span class="re0">name</span>=<span class="st0">&quot;last_name&quot;</span> <span class="re0">type</span>=<span class="st0">&quot;varchar&quot;</span> <span class="re0">size</span>=<span class="st0">&quot;100&quot;</span> <span class="re2">/&gt;</span></span>
    <span class="sc3"><span class="re1">&lt;/table<span class="re2">&gt;</span></span></span>
&nbsp;
<span class="sc3"><span class="re1">&lt;/database<span class="re2">&gt;</span></span></span></pre>
</dd></dl>
<pre class="code">  $ php app/console propel:model:build
  &gt;&gt;        AppBundle    Generated model classes from schema.xml
  $ php app/console propel:migration:generate-diff
  …
  &quot;PropelMigration_1426166067.php&quot; file successfully created in […] /app/propel/migrations
  …
  $ php app/console propel:migration:status
  $ php app/console propel:migration:migrate</pre>

<p>
Pensez à <code>commit</code> le schéma et le code généré dans <code>app/propel/migrations/</code> et <code>src/AppBundle/Model/</code>.
</p>

</div>
<!-- EDIT4 SECTION "Travailler avec la base de données" [2333-3370] -->
<h2 class="sectionedit5" id="charger_des_donnees">Charger des données</h2>
<div class="level2">

<p>
Pour des données “normales” à insérer dans la base après sa création on peut utiliser les <code>fixtures</code> de Propel :
</p>
<pre class="code">  $ mkdir src/AppBundle/Resources/fixtures/</pre>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=5" title="Download Snippet" class="mediafile mf_yml">src/AppBundle/Resources/fixtures/001-users.yml</a></dt>
<dd><pre class="code yml">AppBundle\Model\User:
    u1:
        first_name: Jean
        last_name: Dupond
    u2:
        first_name: Marie
        last_name: Dupont</pre>
</dd></dl>
<pre class="code">  $ php app/console propel:fixtures:load @AppBundle</pre>
<!-- EDIT6 PLUGIN_WRAP_START [0-] --><div class="wrap_round wrap_important plugin_wrap">
<p>
Faites attention en utilisant la méthode si dessus, car <strong>la table sera vidée</strong> avant d&#039;insérer les fixtures !<br/>

Pour avoir <strong>des données de test</strong>, il vaut mieux utiliser la méthode ci-dessous.
</p>
</div><!-- EDIT7 PLUGIN_WRAP_END [0-] -->
<p>
Pour ajouter automatiquement de fausses données, il vaut mieux utiliser <a href="https://github.com/willdurand/BazingaFakerBundle" class="urlextern" title="https://github.com/willdurand/BazingaFakerBundle"  rel="nofollow">le bundle approprié</a> :
</p>
<pre class="code">  $ composer require &quot;willdurand/faker-bundle&quot; &quot;@stable&quot;</pre>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=6" title="Download Snippet" class="mediafile mf_php">app/AppKernel.php</a></dt>
<dd><pre class="code php"><span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/in_array"><span class="kw3">in_array</span></a><span class="br0">&#40;</span><span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">getEnvironment</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st_h">'dev'</span><span class="sy0">,</span> <span class="st_h">'test'</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="co1">// …</span>
    <span class="re0">$bundles</span><span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="kw2">new</span> Bazinga\Bundle\FakerBundle\BazingaFakerBundle<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre>
</dd></dl>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=7" title="Download Snippet" class="mediafile mf_yml">app/config/config_dev.yml</a></dt>
<dd><pre class="code yml">bazinga_faker:
    seed:       1234
    locale:     fr_FR
    entities:
        AppBundle\Model\User:
            number: 5</pre>
</dd></dl>
<pre class="code">  $ php app/console faker:populate</pre>

</div>
<!-- EDIT5 SECTION "Charger des données" [3371-4672] -->
<h2 class="sectionedit8" id="tester_le_code">Tester le code</h2>
<div class="level2">

<p>
Comme indiquer dans les bonnes pratiques, il vaut mieux mettre en place des tests le plus tôt possible. Ceci se fait assez simplement une fois <code>phpunit</code> installé.
</p>

<p>
On écrit un fichier de test par contrôleur. 
</p>
<dl class="code">
<dt><a href="/_export/code/informatique/developpement/symfony?codeblock=8" title="Download Snippet" class="mediafile mf_php">src/AppBundle/Tests/Controller/DefaultControllerTest.php</a></dt>
<dd><pre class="code php"><span class="kw2">&lt;?php</span>
&nbsp;
<span class="kw2">namespace</span> AppBundle\Tests\Controller<span class="sy0">;</span>
&nbsp;
<span class="kw2">use</span> Symfony\Bundle\FrameworkBundle\Test\WebTestCase<span class="sy0">;</span>
&nbsp;
<span class="kw2">class</span> DefaultControllerTest <span class="kw2">extends</span> WebTestCase
<span class="br0">&#123;</span>
    <span class="kw2">public</span> <span class="kw2">function</span> urlProvider<span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="kw1">return</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span>
            <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st_h">'/'</span><span class="br0">&#41;</span><span class="sy0">,</span>
        <span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    <span class="co4">/**
     * @dataProvider urlProvider
     */</span>
    <span class="kw2">public</span> <span class="kw2">function</span> testPageIsSuccessful<span class="br0">&#40;</span><span class="re0">$url</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="re0">$client</span> <span class="sy0">=</span> <span class="kw2">self</span><span class="sy0">::</span><span class="me2">createClient</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="re0">$client</span><span class="sy0">-&gt;</span><span class="me1">request</span><span class="br0">&#40;</span><span class="st_h">'GET'</span><span class="sy0">,</span> <span class="re0">$url</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">assertTrue</span><span class="br0">&#40;</span><span class="re0">$client</span><span class="sy0">-&gt;</span><span class="me1">getResponse</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">-&gt;</span><span class="me1">isSuccessful</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    <span class="kw2">public</span> <span class="kw2">function</span> testPrivate<span class="br0">&#40;</span><span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
        <span class="re0">$client</span> <span class="sy0">=</span> static<span class="sy0">::</span><span class="me2">createClient</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="re0">$crawler</span> <span class="sy0">=</span> <span class="re0">$client</span><span class="sy0">-&gt;</span><span class="me1">request</span><span class="br0">&#40;</span><span class="st_h">'GET'</span><span class="sy0">,</span> <span class="st_h">'/private'</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="re0">$this</span><span class="sy0">-&gt;</span><span class="me1">assertEquals</span><span class="br0">&#40;</span><span class="nu0">302</span><span class="sy0">,</span> <span class="re0">$client</span><span class="sy0">-&gt;</span><span class="me1">getResponse</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">-&gt;</span><span class="me1">getStatusCode</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span></pre>
</dd></dl>

<p>
Une fois le test démarré, toutes les méthodes <code>test*()</code> existantes seront appelées.
</p>
<pre class="code">  $ phpunit -c app/</pre>
<!-- EDIT9 PLUGIN_WRAP_START [0-] --><div class="wrap_round wrap_todo plugin_wrap">
<p>
Après de nombreux essais, je ne réussis toujours pas à faire fonctionner <code>Propel</code> avec <code>SQLite</code>. Cela me gène car j&#039;aime faire les <em>dév</em> avec <code>SQLite</code>.<br/>

En pratique, ce n&#039;est pas un problème car de toute façon la <em>prod</em> est en <code>MySQL</code> ou autre SGBD.
</p>
</div><!-- EDIT10 PLUGIN_WRAP_END [0-] -->
</div>
<!-- EDIT8 SECTION "Tester le code" [4673-6137] -->
<h2 class="sectionedit11" id="bonne_pratiques">Bonne pratiques</h2>
<div class="level2">

<p>
Cette liste de bonnes pratiques est tirée de <a href="http://symfony.com/doc/current/best_practices/index.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/index.html"  rel="nofollow">la page &quot;best practices&quot; de Symfony</a>.
</p>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/introduction.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/introduction.html"  rel="nofollow">Introduction</a></div>
<ul>
<li class="level2"><div class="li"> you should not refactor your existing applications to comply with these best practices.</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/creating-the-project.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/creating-the-project.html"  rel="nofollow">Creating the project</a></div>
<ul>
<li class="level2"><div class="li"> Create only one bundle called AppBundle for your application logic</div>
</li>
<li class="level2"><div class="li"> There is no need to prefix the AppBundle with your own vendor (e.g. AcmeAppBundle), because this application bundle is never going to be shared.</div>
</li>
<li class="level2"><div class="li"> <code>$ php app/console generate:bundle –namespace=AppBundle –dir=src –format=annotation –no-interaction</code></div>
</li>
<li class="level2"><div class="li"> app/Resources/, stores all the templates and the translation files</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/configuration.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/configuration.html"  rel="nofollow">Configuration</a></div>
<ul>
<li class="level2"><div class="li"> Define the infrastructure-related configuration options in the app/config/parameters.yml file.</div>
</li>
<li class="level2"><div class="li"> Define all your application&#039;s parameters in the app/config/parameters.yml.dist file.</div>
</li>
<li class="level2"><div class="li"> Define the application behavior related configuration options in the app/config/config.yml file.</div>
</li>
<li class="level2"><div class="li"> Use constants to define configuration options that rarely change.</div>
</li>
<li class="level2"><div class="li"> Moving Sensitive Options Outside of Symfony Entirely</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/business-logic.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/business-logic.html"  rel="nofollow">Business Logic</a></div>
<ul>
<li class="level2"><div class="li"> “Services: Naming and Format”</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/controllers.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/controllers.html"  rel="nofollow">Controllers</a></div>
<ul>
<li class="level2"><div class="li"> Symfony follows the philosophy of “thin controllers and fat models”</div>
</li>
<li class="level2"><div class="li"> Use the ParamConverter trick to automatically query for Doctrine|Propel entities when it&#039;s simple and convenient.</div>
</li>
<li class="level2"><div class="li"> Pre and Post Hooks</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/templates.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/templates.html"  rel="nofollow">Templates</a></div>
<ul>
<li class="level2"><div class="li"> Store all your application&#039;s templates in app/Resources/views/ directory.</div>
</li>
<li class="level2"><div class="li"> Define your Twig extensions in the AppBundle/Twig/ directory and configure them using the app/config/services.yml file.</div>
</li>
<li class="level2"><div class="li"> ex: a custom md2html Twig filter</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/forms.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/forms.html"  rel="nofollow">Forms</a></div>
<ul>
<li class="level2"><div class="li"> Define your forms as PHP classes… EntityType and createForm()</div>
</li>
<li class="level2"><div class="li"> <a href="http://propelorm.org/Propel/cookbook/symfony2/mastering-symfony2-forms-with-propel.html" class="urlextern" title="http://propelorm.org/Propel/cookbook/symfony2/mastering-symfony2-forms-with-propel.html"  rel="nofollow">http://propelorm.org/Propel/cookbook/symfony2/mastering-symfony2-forms-with-propel.html</a></div>
</li>
<li class="level2"><div class="li"> Add buttons in the templates, not in the form classes or the controllers.</div>
</li>
<li class="level2"><div class="li"> Handling Form Submits […] we recommend using $form→isSubmitted() in the if statement for clarity.</div>
</li>
<li class="level2"><div class="li"> (Always redirect after post!)</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/i18n.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/i18n.html"  rel="nofollow">I18n</a></div>
<ul>
<li class="level2"><div class="li"> Use the XLIFF format for your translation files.</div>
</li>
<li class="level2"><div class="li"> Always use keys for translations instead of content strings.</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/security.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/security.html"  rel="nofollow">Security</a></div>
</li>
<li class="level2"><div class="li"> Use the bcrypt encoder for encoding your users&#039; passwords.</div>
</li>
<li class="level2"><div class="li"> Whenever possible, use the @Security annotation</div>
</li>
<li class="level2"><div class="li"> If your security logic is complex and can&#039;t be centralized into a method like isAuthor(), you should leverage custom voters.</div>
</li>
<li class="level2"><div class="li"> with Propel <a href="http://propelorm.org/documentation/cookbook/symfony2/the-symfony2-security-component-and-propel.html" class="urlextern" title="http://propelorm.org/documentation/cookbook/symfony2/the-symfony2-security-component-and-propel.html"  rel="nofollow">http://propelorm.org/documentation/cookbook/symfony2/the-symfony2-security-component-and-propel.html</a></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/web-assets.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/web-assets.html"  rel="nofollow">Web-assets</a></div>
<ul>
<li class="level2"><div class="li"> Store your assets in the web/ directory.</div>
</li>
<li class="level2"><div class="li"> Use Assetic to compile, combine and minimize web assets</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/best_practices/tests.html" class="urlextern" title="http://symfony.com/doc/current/best_practices/tests.html"  rel="nofollow">Tests</a></div>
<ul>
<li class="level2"><div class="li"> Define a functional test that at least checks if your application pages are successfully loading.</div>
</li>
</ul>
</li>
</ul>

</div>
<!-- EDIT11 SECTION "Bonne pratiques" [6138-9738] -->
<h2 class="sectionedit12" id="divers">Divers</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/book/routing.html" class="urlextern" title="http://symfony.com/doc/current/book/routing.html"  rel="nofollow">Routing</a></div>
<ul>
<li class="level2"><div class="li"> @Route(”/blog/{page}”, defaults={“page”: 1}, requirements={“page”: “\d+”})</div>
</li>
<li class="level2"><div class="li"> @Method(“POST”)</div>
</li>
</ul>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/cookbook/assetic/jpeg_optimize.html" class="urlextern" title="http://symfony.com/doc/current/cookbook/assetic/jpeg_optimize.html"  rel="nofollow">JPEG optimize</a></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="http://symfony.com/doc/current/book/testing.html" class="urlextern" title="http://symfony.com/doc/current/book/testing.html"  rel="nofollow">Testing</a></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://github.com/fzaninotto/Faker" class="urlextern" title="https://github.com/fzaninotto/Faker"  rel="nofollow">Faker</a></div>
<ul>
<li class="level2"><div class="li"> Populating Entities Using an ORM</div>
</li>
</ul>
</li>
</ul>

</div>
<!-- EDIT12 SECTION "Divers" [9739-] -->