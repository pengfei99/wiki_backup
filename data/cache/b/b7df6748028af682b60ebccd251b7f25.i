a:524:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:7:"Symfony";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:18:"http://symfony.com";i:1;s:7:"Symfony";}i:2;i:24;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:" est un ensemble de composants réutilisables pour PHP qui permet de déployer rapidement des applications web. ";}i:2;i:54;}i:6;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:166;}i:7;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:168;}i:8;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Créer un projet";i:1;i:2;i:2;i:168;}i:2;i:168;}i:9;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:168;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:168;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:"Avant de démarrer un projet, assurez vous de connaitre ";}i:2;i:198;}i:12;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:23:"developpement_de_projet";i:1;s:48:"les bonnes pratiques de développement de projet";}i:2;i:254;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:330;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:331;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:331;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"Installer l'outils ";}i:2;i:333;}i:17;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:352;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"symfony";}i:2;i:354;}i:19;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:361;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:" :";}i:2;i:363;}i:21;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:366;}i:22;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:119:"  $ curl -LsS http://symfony.com/installer > symfony.phar
  $ mv symfony.phar ~/bin/symfony
  $ chmod a+x ~/bin/symfony";}i:2;i:366;}i:23;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:366;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:"Créer le squelette de l'application :";}i:2;i:494;}i:25;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:534;}i:26;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:31:"  $ symfony new mon_application";}i:2;i:534;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:534;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"Supprimer le bundle de démo :";}i:2;i:570;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:601;}i:30;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:331:"  A default bundle, AcmeDemoBundle, shows you Symfony2 in action. After playing with it, you can remove it by following these steps:
   * delete the src/Acme directory;
   * remove the routing entries referencing AcmeBundle in app/config/routing_dev.yml;
   * remove the AcmeBundle from the registered bundles in app/AppKernel.php.";}i:2;i:601;}i:31;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:943;}i:32;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"Connecter une base de données";i:1;i:2;i:2;i:943;}i:2;i:943;}i:33;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:943;}i:34;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:52:"  $ composer require propel/propel-bundle "~2.0@dev"";}i:2;i:986;}i:35;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:77:"
$bundles = array(
    // …
    new Propel\PropelBundle\PropelBundle(),
);
";i:1;s:3:"php";i:2;s:17:"app/AppKernel.php";}i:2;i:1048;}i:36;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:336:"
parameters:
    database_driver: pdo_mysql
    database_host: 127.0.0.1
    database_port: null
    database_name: mon_application
    database_user: utilisateur
    database_password: mon_mot_de_passe
    mailer_transport: smtp
    mailer_host: 127.0.0.1
    mailer_user: null
    mailer_password: null
    locale: en
    secret: xyz
";i:1;s:3:"yml";i:2;s:25:"app/config/parameters.yml";}i:2;i:1162;}i:37;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:334:"
propel:
    dbal:
        driver:               %database_driver%
        user:                 %database_user%
        password:             %database_password%
        dsn:                  %database_driver%:host=%database_host%;dbname=%database_name%;charset=UTF8
        options:              {}
        attributes:           {}
";i:1;s:3:"yml";i:2;s:21:"app/config/config.yml";}i:2;i:1543;}i:38;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:43:"  $ mkdir -p src/AppBundle/Resources/config";}i:2;i:1912;}i:39;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:131:"
<?xml version="1.0" encoding="UTF-8"?>
<database name="default" namespace="AppBundle\Model" defaultIdMethod="native">
</database>
";i:1;s:3:"xml";i:2;s:41:"src/AppBundle/Resources/config/schema.xml";}i:2;i:1965;}i:40;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:171:"  $ php app/console propel:database:create
  Use connection named default in dev environment.
  Database mon_application has been created.
  $ php app/console propel:build";}i:2;i:2151;}i:41;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2333;}i:42;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:35:"Travailler avec la base de données";i:1;i:2;i:2;i:2333;}i:2;i:2333;}i:43;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2333;}i:44;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:49:"  $ vim src/AppBundle/Resources/config/schema.xml";}i:2;i:2381;}i:45;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:394:"
<?xml version="1.0" encoding="UTF-8"?>
<database name="default" namespace="AppBundle\Model" defaultIdMethod="native">

    <table name="user">
        <column name="id" type="integer" required="true" primaryKey="true" autoIncrement="true" />
        <column name="first_name" type="varchar" size="100" />
        <column name="last_name" type="varchar" size="100" />
    </table>

</database>
";i:1;s:3:"xml";i:2;s:41:"src/AppBundle/Resources/config/schema.xml";}i:2;i:2440;}i:46;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:348:"  $ php app/console propel:model:build
  >>        AppBundle    Generated model classes from schema.xml
  $ php app/console propel:migration:generate-diff
  …
  "PropelMigration_1426166067.php" file successfully created in […] /app/propel/migrations
  …
  $ php app/console propel:migration:status
  $ php app/console propel:migration:migrate";}i:2;i:2889;}i:47;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2889;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Pensez à ";}i:2;i:3256;}i:49;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:3266;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"commit";}i:2;i:3268;}i:51;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:3274;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" le schéma et le code généré dans ";}i:2;i:3276;}i:53;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:3314;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"app/propel/migrations/";}i:2;i:3316;}i:55;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:3338;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" et ";}i:2;i:3340;}i:57;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:3344;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"src/AppBundle/Model/";}i:2;i:3346;}i:59;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:3366;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:3368;}i:61;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3369;}i:62;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3371;}i:63;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"Charger des données";i:1;i:2;i:2;i:3371;}i:2;i:3371;}i:64;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3371;}i:65;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3371;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"Pour des données ";}i:2;i:3405;}i:67;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3423;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"normales";}i:2;i:3424;}i:69;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3432;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:" à insérer dans la base après sa création on peut utiliser les ";}i:2;i:3433;}i:71;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:3500;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"fixtures";}i:2;i:3502;}i:73;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:3510;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" de Propel :";}i:2;i:3512;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3526;}i:76;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:43:"  $ mkdir src/AppBundle/Resources/fixtures/";}i:2;i:3526;}i:77;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:142:"
AppBundle\Model\User:
    u1:
        first_name: Jean
        last_name: Dupond
    u2:
        first_name: Marie
        last_name: Dupont
";i:1;s:3:"yml";i:2;s:46:"src/AppBundle/Resources/fixtures/001-users.yml";}i:2;i:3579;}i:78;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:51:"  $ php app/console propel:fixtures:load @AppBundle";}i:2;i:3781;}i:79;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:12:"wrap_divwrap";i:1;a:2:{i:0;i:1;i:1;s:15:"round important";}i:2;i:1;i:3;s:22:"<WRAP round important>";}i:2;i:3837;}i:80;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3837;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:"Faites attention en utilisant la méthode si dessus, car ";}i:2;i:3860;}i:82;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3917;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"la table sera vidée";}i:2;i:3919;}i:84;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3939;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" avant d'insérer les fixtures !";}i:2;i:3941;}i:86;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:3973;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"
Pour avoir ";}i:2;i:3976;}i:88;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3988;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"des données de test";}i:2;i:3990;}i:90;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4010;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:", il vaut mieux utiliser la méthode ci-dessous.";}i:2;i:4012;}i:92;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4061;}i:93;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:12:"wrap_divwrap";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:7:"</WRAP>";}i:2;i:4061;}i:94;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4061;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"Pour ajouter automatiquement de fausses données, il vaut mieux utiliser ";}i:2;i:4070;}i:96;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:48:"https://github.com/willdurand/BazingaFakerBundle";i:1;s:20:"le bundle approprié";}i:2;i:4143;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:" :";}i:2;i:4216;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4219;}i:99;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:56:"  $ composer require "willdurand/faker-bundle" "@stable"";}i:2;i:4219;}i:100;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:147:"
if (in_array($this->getEnvironment(), array('dev', 'test'))) {
    // …
    $bundles[] = new Bazinga\Bundle\FakerBundle\BazingaFakerBundle();
}
";i:1;s:3:"php";i:2;s:17:"app/AppKernel.php";}i:2;i:4285;}i:101;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:125:"
bazinga_faker:
    seed:       1234
    locale:     fr_FR
    entities:
        AppBundle\Model\User:
            number: 5
";i:1;s:3:"yml";i:2;s:25:"app/config/config_dev.yml";}i:2;i:4469;}i:102;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:34:"  $ php app/console faker:populate";}i:2;i:4633;}i:103;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4673;}i:104;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"Tester le code";i:1;i:2;i:2;i:4673;}i:2;i:4673;}i:105;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4673;}i:106;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4673;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:144:"Comme indiquer dans les bonnes pratiques, il vaut mieux mettre en place des tests le plus tôt possible. Ceci se fait assez simplement une fois ";}i:2;i:4701;}i:108;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:4845;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"phpunit";}i:2;i:4847;}i:110;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:4854;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" installé.";}i:2;i:4856;}i:112;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4867;}i:113;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4867;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"On écrit un fichier de test par contrôleur. ";}i:2;i:4869;}i:115;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4915;}i:116;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:731:"
<?php

namespace AppBundle\Tests\Controller;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

class DefaultControllerTest extends WebTestCase
{
    public function urlProvider()
    {
        return array(
            array('/'),
        );
    }

    /**
     * @dataProvider urlProvider
     */
    public function testPageIsSuccessful($url)
    {
        $client = self::createClient();
        $client->request('GET', $url);
        $this->assertTrue($client->getResponse()->isSuccessful());
    }

    public function testPrivate()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/private');
        $this->assertEquals(302, $client->getResponse()->getStatusCode());
    }
}
";i:1;s:3:"php";i:2;s:56:"src/AppBundle/Tests/Controller/DefaultControllerTest.php";}i:2;i:4922;}i:117;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4922;}i:118;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"Une fois le test démarré, toutes les méthodes ";}i:2;i:5724;}i:119;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:5773;}i:120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"test*()";}i:2;i:5775;}i:121;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:5782;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" existantes seront appelées.";}i:2;i:5784;}i:123;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5814;}i:124;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:19:"  $ phpunit -c app/";}i:2;i:5814;}i:125;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:12:"wrap_divwrap";i:1;a:2:{i:0;i:1;i:1;s:10:"round todo";}i:2;i:1;i:3;s:18:"<WRAP round todo >";}i:2;i:5839;}i:126;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5839;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"Après de nombreux essais, je ne réussis toujours pas à faire fonctionner ";}i:2;i:5858;}i:128;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:5934;}i:129;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"Propel";}i:2;i:5936;}i:130;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:5942;}i:131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" avec ";}i:2;i:5944;}i:132;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:5950;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"SQLite";}i:2;i:5952;}i:134;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:5958;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:". Cela me gène car j'aime faire les ";}i:2;i:5960;}i:136;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:5997;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"dév";}i:2;i:5999;}i:138;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:6003;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" avec ";}i:2;i:6005;}i:140;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:6011;}i:141;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"SQLite";}i:2;i:6013;}i:142;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:6019;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:6021;}i:144;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:6022;}i:145;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"
En pratique, ce n'est pas un problème car de toute façon la ";}i:2;i:6024;}i:146;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:6087;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"prod";}i:2;i:6089;}i:148;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:6093;}i:149;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" est en ";}i:2;i:6095;}i:150;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:6103;}i:151;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"MySQL";}i:2;i:6105;}i:152;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:6110;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" ou autre SGBD.";}i:2;i:6112;}i:154;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6128;}i:155;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:12:"wrap_divwrap";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:7:"</WRAP>";}i:2;i:6128;}i:156;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6138;}i:157;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"Bonne pratiques";i:1;i:2;i:2;i:6138;}i:2;i:6138;}i:158;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:6138;}i:159;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6138;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"Cette liste de bonnes pratiques est tirée de ";}i:2;i:6167;}i:161;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:56:"http://symfony.com/doc/current/best_practices/index.html";i:1;s:35:"la page "best practices" de Symfony";}i:2;i:6213;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:6309;}i:163;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6311;}i:164;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6311;}i:165;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6311;}i:166;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6311;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6315;}i:168;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:63:"http://symfony.com/doc/current/best_practices/introduction.html";i:1;s:12:"Introduction";}i:2;i:6316;}i:169;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6396;}i:170;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6396;}i:171;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:6396;}i:172;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6396;}i:173;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" you should not refactor your existing applications to comply with these best practices.";}i:2;i:6402;}i:174;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6490;}i:175;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6490;}i:176;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6490;}i:177;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6490;}i:178;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6490;}i:179;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6491;}i:180;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6491;}i:181;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6491;}i:182;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6495;}i:183;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:71:"http://symfony.com/doc/current/best_practices/creating-the-project.html";i:1;s:20:"Creating the project";}i:2;i:6496;}i:184;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6592;}i:185;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6592;}i:186;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:6592;}i:187;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6592;}i:188;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:" Create only one bundle called AppBundle for your application logic";}i:2;i:6598;}i:189;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6665;}i:190;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6665;}i:191;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:6665;}i:192;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6665;}i:193;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:145:" There is no need to prefix the AppBundle with your own vendor (e.g. AcmeAppBundle), because this application bundle is never going to be shared.";}i:2;i:6671;}i:194;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6816;}i:195;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6816;}i:196;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:6816;}i:197;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6816;}i:198;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:6822;}i:199;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:6823;}i:200;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"$ php app/console generate:bundle ";}i:2;i:6825;}i:201;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:6859;}i:202;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"namespace=AppBundle ";}i:2;i:6861;}i:203;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:6881;}i:204;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"dir=src ";}i:2;i:6883;}i:205;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:6891;}i:206;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"format=annotation ";}i:2;i:6893;}i:207;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:6911;}i:208;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"no-interaction";}i:2;i:6913;}i:209;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:6927;}i:210;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6929;}i:211;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6929;}i:212;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:6929;}i:213;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6929;}i:214;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:" app/Resources/, stores all the templates and the translation files";}i:2;i:6935;}i:215;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7002;}i:216;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7002;}i:217;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7002;}i:218;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7002;}i:219;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7002;}i:220;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7003;}i:221;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7003;}i:222;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7003;}i:223;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7007;}i:224;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:64:"http://symfony.com/doc/current/best_practices/configuration.html";i:1;s:13:"Configuration";}i:2;i:7008;}i:225;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7090;}i:226;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7090;}i:227;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7090;}i:228;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7090;}i:229;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:" Define the infrastructure-related configuration options in the app/config/parameters.yml file.";}i:2;i:7096;}i:230;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7191;}i:231;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7191;}i:232;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7191;}i:233;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7191;}i:234;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" Define all your application's parameters in the app/config/parameters.yml.dist file.";}i:2;i:7197;}i:235;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7282;}i:236;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7282;}i:237;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7282;}i:238;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7282;}i:239;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:" Define the application behavior related configuration options in the app/config/config.yml file.";}i:2;i:7288;}i:240;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7385;}i:241;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7385;}i:242;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7385;}i:243;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7385;}i:244;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:" Use constants to define configuration options that rarely change.";}i:2;i:7391;}i:245;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7457;}i:246;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7457;}i:247;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7457;}i:248;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7457;}i:249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:" Moving Sensitive Options Outside of Symfony Entirely";}i:2;i:7463;}i:250;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7516;}i:251;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7516;}i:252;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7516;}i:253;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7516;}i:254;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7516;}i:255;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7517;}i:256;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7517;}i:257;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7517;}i:258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7521;}i:259;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:65:"http://symfony.com/doc/current/best_practices/business-logic.html";i:1;s:14:"Business Logic";}i:2;i:7522;}i:260;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7606;}i:261;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7606;}i:262;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7606;}i:263;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7606;}i:264;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7612;}i:265;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7613;}i:266;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"Services: Naming and Format";}i:2;i:7614;}i:267;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7641;}i:268;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7642;}i:269;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7642;}i:270;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7642;}i:271;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7642;}i:272;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7642;}i:273;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7643;}i:274;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7643;}i:275;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7643;}i:276;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7647;}i:277;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:62:"http://symfony.com/doc/current/best_practices/controllers.html";i:1;s:11:"Controllers";}i:2;i:7648;}i:278;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7726;}i:279;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7726;}i:280;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7726;}i:281;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7726;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" Symfony follows the philosophy of ";}i:2;i:7732;}i:283;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7767;}i:284;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"thin controllers and fat models";}i:2;i:7768;}i:285;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7799;}i:286;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7800;}i:287;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7800;}i:288;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7800;}i:289;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7800;}i:290;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:" Use the ParamConverter trick to automatically query for Doctrine|Propel entities when it's simple and convenient.";}i:2;i:7806;}i:291;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7920;}i:292;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7920;}i:293;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:7920;}i:294;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7920;}i:295;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" Pre and Post Hooks";}i:2;i:7926;}i:296;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7945;}i:297;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7945;}i:298;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7945;}i:299;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7945;}i:300;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7945;}i:301;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7946;}i:302;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7946;}i:303;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7946;}i:304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7950;}i:305;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:60:"http://symfony.com/doc/current/best_practices/templates.html";i:1;s:9:"Templates";}i:2;i:7951;}i:306;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8025;}i:307;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:8025;}i:308;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8025;}i:309;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8025;}i:310;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:" Store all your application's templates in app/Resources/views/ directory.";}i:2;i:8031;}i:311;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8105;}i:312;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8105;}i:313;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8105;}i:314;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8105;}i:315;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:" Define your Twig extensions in the AppBundle/Twig/ directory and configure them using the app/config/services.yml file.";}i:2;i:8111;}i:316;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8231;}i:317;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8231;}i:318;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8231;}i:319;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8231;}i:320;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" ex: a custom md2html Twig filter";}i:2;i:8237;}i:321;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8270;}i:322;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8270;}i:323;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:8270;}i:324;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8270;}i:325;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:8270;}i:326;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:8271;}i:327;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:8271;}i:328;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8271;}i:329;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:8275;}i:330;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:56:"http://symfony.com/doc/current/best_practices/forms.html";i:1;s:5:"Forms";}i:2;i:8276;}i:331;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8342;}i:332;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:8342;}i:333;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8342;}i:334;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8342;}i:335;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" Define your forms as PHP classes… EntityType and createForm()";}i:2;i:8348;}i:336;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8412;}i:337;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8412;}i:338;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8412;}i:339;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8412;}i:340;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:8418;}i:341;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:87:"http://propelorm.org/Propel/cookbook/symfony2/mastering-symfony2-forms-with-propel.html";i:1;N;}i:2;i:8419;}i:342;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8506;}i:343;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8506;}i:344;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8506;}i:345;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8506;}i:346;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:" Add buttons in the templates, not in the form classes or the controllers.";}i:2;i:8512;}i:347;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8586;}i:348;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8586;}i:349;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8586;}i:350;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8586;}i:351;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:" Handling Form Submits […] we recommend using $form";}i:2;i:8592;}i:352;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:8645;}i:353;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"isSubmitted() in the if statement for clarity.";}i:2;i:8647;}i:354;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8693;}i:355;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8693;}i:356;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8693;}i:357;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8693;}i:358;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" (Always redirect after post!)";}i:2;i:8699;}i:359;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8729;}i:360;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8729;}i:361;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:8729;}i:362;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8729;}i:363;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:8729;}i:364;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:8730;}i:365;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:8730;}i:366;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8730;}i:367;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:8734;}i:368;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:55:"http://symfony.com/doc/current/best_practices/i18n.html";i:1;s:4:"I18n";}i:2;i:8735;}i:369;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8799;}i:370;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:8799;}i:371;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8799;}i:372;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8799;}i:373;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:" Use the XLIFF format for your translation files.";}i:2;i:8805;}i:374;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8854;}i:375;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8854;}i:376;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:8854;}i:377;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8854;}i:378;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:" Always use keys for translations instead of content strings.";}i:2;i:8860;}i:379;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8921;}i:380;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8921;}i:381;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:8921;}i:382;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8921;}i:383;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:8921;}i:384;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:8922;}i:385;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:8922;}i:386;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8922;}i:387;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:8928;}i:388;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:59:"http://symfony.com/doc/current/best_practices/security.html";i:1;s:8:"Security";}i:2;i:8929;}i:389;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9001;}i:390;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9001;}i:391;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9001;}i:392;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9001;}i:393;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" Use the bcrypt encoder for encoding your users' passwords.";}i:2;i:9007;}i:394;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9066;}i:395;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9066;}i:396;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9066;}i:397;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9066;}i:398;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:" Whenever possible, use the @Security annotation";}i:2;i:9072;}i:399;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9120;}i:400;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9120;}i:401;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9120;}i:402;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9120;}i:403;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:125:" If your security logic is complex and can't be centralized into a method like isAuthor(), you should leverage custom voters.";}i:2;i:9126;}i:404;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9251;}i:405;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9251;}i:406;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9251;}i:407;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9251;}i:408;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" with Propel ";}i:2;i:9257;}i:409;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:100:"http://propelorm.org/documentation/cookbook/symfony2/the-symfony2-security-component-and-propel.html";i:1;N;}i:2;i:9270;}i:410;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9370;}i:411;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9370;}i:412;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9370;}i:413;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9371;}i:414;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9371;}i:415;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9371;}i:416;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9375;}i:417;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:61:"http://symfony.com/doc/current/best_practices/web-assets.html";i:1;s:10:"Web-assets";}i:2;i:9376;}i:418;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9452;}i:419;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9452;}i:420;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9452;}i:421;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9452;}i:422;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:" Store your assets in the web/ directory.";}i:2;i:9458;}i:423;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9499;}i:424;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9499;}i:425;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9499;}i:426;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9499;}i:427;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:" Use Assetic to compile, combine and minimize web assets";}i:2;i:9505;}i:428;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9561;}i:429;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9561;}i:430;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9561;}i:431;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9561;}i:432;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9561;}i:433;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9562;}i:434;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9562;}i:435;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9562;}i:436;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9566;}i:437;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:56:"http://symfony.com/doc/current/best_practices/tests.html";i:1;s:5:"Tests";}i:2;i:9567;}i:438;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9633;}i:439;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9633;}i:440;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9633;}i:441;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9633;}i:442;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:" Define a functional test that at least checks if your application pages are successfully loading.";}i:2;i:9639;}i:443;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9737;}i:444;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9737;}i:445;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9737;}i:446;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9737;}i:447;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9737;}i:448;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9739;}i:449;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"Divers";i:1;i:2;i:2;i:9739;}i:2;i:9739;}i:450;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:9739;}i:451;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9758;}i:452;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9758;}i:453;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9758;}i:454;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9762;}i:455;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:48:"http://symfony.com/doc/current/book/routing.html";i:1;s:7:"Routing";}i:2;i:9763;}i:456;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9823;}i:457;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9823;}i:458;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9823;}i:459;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9823;}i:460;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" @Route(";}i:2;i:9829;}i:461;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9837;}i:462;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"/blog/{page}";}i:2;i:9838;}i:463;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9850;}i:464;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:", defaults={";}i:2;i:9851;}i:465;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:9863;}i:466;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"page";}i:2;i:9864;}i:467;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9868;}i:468;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:": 1}, requirements={";}i:2;i:9869;}i:469;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:9889;}i:470;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"page";}i:2;i:9890;}i:471;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9894;}i:472;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:": ";}i:2;i:9895;}i:473;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:9897;}i:474;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"\d+";}i:2;i:9898;}i:475;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9901;}i:476;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"})";}i:2;i:9902;}i:477;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9904;}i:478;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9904;}i:479;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:9904;}i:480;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9904;}i:481;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" @Method(";}i:2;i:9910;}i:482;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:9919;}i:483;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"POST";}i:2;i:9920;}i:484;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:9924;}i:485;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:")";}i:2;i:9925;}i:486;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9926;}i:487;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9926;}i:488;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9926;}i:489;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9926;}i:490;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9926;}i:491;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9927;}i:492;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9927;}i:493;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9927;}i:494;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9931;}i:495;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:66:"http://symfony.com/doc/current/cookbook/assetic/jpeg_optimize.html";i:1;s:13:"JPEG optimize";}i:2;i:9932;}i:496;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10016;}i:497;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10016;}i:498;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10016;}i:499;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:10017;}i:500;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10017;}i:501;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10017;}i:502;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:10021;}i:503;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:48:"http://symfony.com/doc/current/book/testing.html";i:1;s:7:"Testing";}i:2;i:10022;}i:504;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10082;}i:505;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10082;}i:506;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10082;}i:507;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:10083;}i:508;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10083;}i:509;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10083;}i:510;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:10087;}i:511;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:35:"https://github.com/fzaninotto/Faker";i:1;s:5:"Faker";}i:2;i:10088;}i:512;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10133;}i:513;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:10133;}i:514;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:10133;}i:515;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10133;}i:516;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" Populating Entities Using an ORM";}i:2;i:10139;}i:517;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10172;}i:518;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10172;}i:519;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10172;}i:520;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10172;}i:521;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10172;}i:522;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10173;}i:523;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:10173;}}