a:563:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:38:"Cloudera Enterprise 6.0.x installation";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:55;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:37:"Key components in Cloudera Enterprise";i:1;i:2;i:2;i:55;}i:2;i:55;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:55;}i:6;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:105;}i:7;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:105;}i:8;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:105;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:224:" CDH - The Cloudera distribution of Apache Hadoop and other related open-source projects, including Apache Impala and Cloudera Search. CDH also provides security and integration with numerous hardware and software solutions.";}i:2;i:109;}i:10;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:333;}i:11;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:333;}i:12;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:333;}i:13;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:333;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:672:" Apache Impala - A massively parallel processing SQL engine for interactive analytics and business intelligence. Its highly optimized architecture makes it ideally suited for traditional BI-style queries with joins, aggregations, and subqueries. It can query Hadoop data files from a variety of sources, including those produced by MapReduce jobs or loaded into Hive tables. The YARN resource management component lets Impala coexist on clusters running batch workloads concurrently with Impala SQL queries. You can manage Impala alongside other Hadoop components through the Cloudera Manager user interface, and secure its data through the Sentry authorization framework.";}i:2;i:337;}i:15;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1009;}i:16;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1009;}i:17;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1009;}i:18;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1009;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:522:" Cloudera Search - Provides near real-time access to data stored in or ingested into Hadoop and HBase. Search provides near real-time indexing, batch indexing, full-text exploration and navigated drill-down, as well as a simple, full-text interface that requires no SQL or programming skills. Fully integrated in the data-processing platform, Search uses the flexible, scalable, and robust storage system included with CDH. This eliminates the need to move large data sets across infrastructures to perform business tasks.";}i:2;i:1013;}i:20;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1535;}i:21;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1535;}i:22;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1535;}i:23;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1535;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:316:" Cloudera Manager - A sophisticated application used to deploy, manage, monitor, and diagnose issues with your CDH deployments. Cloudera Manager provides the Admin Console, a web-based user interface that makes administration of your enterprise data simple and straightforward. It also includes the Cloudera Manager ";}i:2;i:1539;}i:25;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:1855;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:108:", which you can use to obtain cluster health information and metrics, as well as configure Cloudera Manager.";}i:2;i:1858;}i:27;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1966;}i:28;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1966;}i:29;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1966;}i:30;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1966;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:513:" Cloudera Navigator - End-to-end data management and security for the CDH platform. Cloudera Navigator Data Management enables administrators, data managers, and analysts explore vast data collections in Hadoop. Cloudera Navigator Encrypt and simplifies the storage and management of encryption keys. The robust auditing, data management, lineage management, lifecycle management, and encryption key management in Cloudera Navigator allow enterprises to adhere to stringent compliance and regulatory requirements.";}i:2;i:1970;}i:32;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2483;}i:33;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2483;}i:34;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2483;}i:35;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2485;}i:36;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"Before installation";i:1;i:2;i:2;i:2485;}i:2;i:2485;}i:37;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2485;}i:38;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2485;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"See the full pre-requis for installation here (";}i:2;i:2518;}i:40;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:86:"https://www.cloudera.com/documentation/enterprise/6/6.0/topics/installation_reqts.html";i:1;N;}i:2;i:2565;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:").";}i:2;i:2651;}i:42;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2653;}i:43;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2655;}i:44;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:43:"Storage Space planning for cloudera manager";i:1;i:3;i:2;i:2655;}i:2;i:2655;}i:45;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2655;}i:46;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2655;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:300:"Cloudera Manager tracks metrics of services, jobs, and applications in many background processes. All of these metrics require storage. Depending on the size of your organization, this storage can be local or remote, disk-based or in a database, managed by you or by another team in another location.";}i:2;i:2711;}i:48;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3011;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3011;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:129:"If your storage is 100% filled, the cluster might experience data loss, and many other components will be impacted. In this page ";}i:2;i:3013;}i:51;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:84:"https://www.cloudera.com/documentation/enterprise/6/6.0/topics/cm_ig_reqs_space.html";i:1;N;}i:2;i:3142;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"
you can check the default disk config for each component of the cluster.";}i:2;i:3226;}i:53;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3300;}i:54;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3302;}i:55;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"Set up ssh access";i:1;i:3;i:2;i:3302;}i:2;i:3302;}i:56;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3302;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3302;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:"The host which has cloudera manager installed need ssh access and sudo right to install required services on each node (master, slave, etc)";}i:2;i:3331;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3470;}i:60;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:411:"
# 1. Create user and group on all hosts
groupadd -g 42030 hadoop

useradd hadoop --uid 100068 --home /home/hadoop --create-home --gid hadoop

# 2. Generate ssh key pair on the cloudera manager host
sudo su hadoop
ssh-keygen -t rsa

# 3. copy the public key into all other nodes
mkdir -p ~/.ssh
vim ~/.ssh/authorized_keys
chmod 0600 ~/.ssh/authorized_keys

# 4. edit the /etc/ssh/sshd_config
AllowUsers hadoop 
";i:1;N;i:2;N;}i:2;i:3477;}i:61;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3901;}i:62;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"Configure network name";i:1;i:3;i:2;i:3901;}i:2;i:3901;}i:63;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3901;}i:64;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3901;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:106:"Configure hostname of each node in the cluster to ensure that all members can communicate with each other.";}i:2;i:3935;}i:66;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4041;}i:67;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:1560:"
# 1. set the hostname to a unique name (fqdn)
sudo hostnamectl set-hostname cloudera01.pengfei.org

# 2. Edit /etc/hosts for all nodes to be aware of all other nodes

1.1.1.1  cloudera01.pengfei.org  cloudera01
2.2.2.2  cloudera02.pengfei.org  cloudera02
3.3.3.3  cloudera03.pengfei.org  cloudera03
4.4.4.4  cloudera04.pengfei.org  cloudera04

# 3. Edit /etc/sysconfig/network with the fqdn of the host
HOSTNAME=cloudera01.pengfei.org

# 4. Verify that each host consistently identifies to the network
# a. Run uname -a and check that the hostname matches the output of the hostname command
# b. Run /sbin/ifconfig and note the value of inet addr in the eth0 (or bond0) entry, for example:
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.17.6.16  netmask 255.255.255.0  broadcast 172.17.6.255
        inet6 fe80::f816:3eff:fe1f:f6ff  prefixlen 64  scopeid 0x20<link>
        ether fa:16:3e:1f:f6:ff  txqueuelen 1000  (Ethernet)
        
# c. Run host -v -t A $(hostname) and verify that the output matches the hostname command.
#    The IP address should be the same as reported by ifconfig for eth0 (or bond0): for example

[pliu@cclindwcloudera01 ~]$ host -v -t A cclindwcloudera01.in2p3.fr
Trying "cclindwcloudera01.in2p3.fr"
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 49519
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;cclindwcloudera01.in2p3.fr.	IN	A

;; ANSWER SECTION:
cclindwcloudera01.in2p3.fr. 0	IN	A	172.17.6.16

Received 60 bytes from 172.17.6.250#53 in 1 ms

";i:1;N;i:2;N;}i:2;i:4048;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4048;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:229:"Note Important:
* The canonical name of each host in /etc/hosts must be the FQDN (for example myhost-1.example.com), not the unqualified hostname (for example myhost-1). The canonical name is the first entry after the IP address.";}i:2;i:5618;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5847;}i:71;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5847;}i:72;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5847;}i:73;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5847;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:" Do not use aliases, either in /etc/hosts or in configuring ";}i:2;i:5851;}i:75;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"DNS";}i:2;i:5911;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:5914;}i:77;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5915;}i:78;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5915;}i:79;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5915;}i:80;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5915;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:181:" Unqualified hostnames (short names) must be unique. For example, you cannot have both host01.example.com and host01.standby.example.com managed by the same Cloudera Manager Server.";}i:2;i:5919;}i:82;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6100;}i:83;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6100;}i:84;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6100;}i:85;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6100;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:" FQDN can not contain _ (e.g. host_01.example.com is not allowed)";}i:2;i:6104;}i:87;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6169;}i:88;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6169;}i:89;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6169;}i:90;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6170;}i:91;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"Disable the firewall";i:1;i:3;i:2;i:6170;}i:2;i:6170;}i:92;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:6170;}i:93;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6170;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:"To disable the firewall on each host in your cluster, perform the following steps on each host.";}i:2;i:6202;}i:95;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6297;}i:96;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:272:"
# if you are using iptables
# Save the existing iptables rule set.
iptables-save > /root/firewall.rules
# stop service from starting at reboot
sudo chkconfig iptables off
# stop service
sudo service iptables stop

# if you are using firewall-cmd
systemctl stop firewalld
";i:1;N;i:2;N;}i:2;i:6304;}i:97;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6586;}i:98;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"Setting selinux mode";i:1;i:3;i:2;i:6586;}i:2;i:6586;}i:99;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:6586;}i:100;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:249:"
# check the selinux state
getenforce

# if the output is enforcing, you need to change to permissive or disabled
vim /etc/selinux/config

SELINUX=disabled
# The above config take effect only after system restart
# disable immediately
setenforce 0

";i:1;N;i:2;N;}i:2;i:6623;}i:101;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6882;}i:102;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"Enableing ntp";i:1;i:3;i:2;i:6882;}i:2;i:6882;}i:103;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:6882;}i:104;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:367:"
# install if you don't have
yum install ntp

# edit the /etc/ntp.conf to add ntp servers.
server 0.pool.ntp.org
server 1.pool.ntp.org
server 2.pool.ntp.org

# start the ntp service
systemctl start ntpd

# configure the ntp service to run at boot
systemctl enable ntpd

# synchonize the node
ntpdate -u <ntp_server>

# synchronize teh system clock

hwclock --systohc
";i:1;N;i:2;N;}i:2;i:6912;}i:105;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7289;}i:106;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"Install python 2.7";i:1;i:3;i:2;i:7289;}i:2;i:7289;}i:107;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7289;}i:108;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7289;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"On centos7, python 2.7.5 is installed by default";}i:2;i:7319;}i:110;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7367;}i:111;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7369;}i:112;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"Impala requirements";i:1;i:3;i:2;i:7369;}i:2;i:7369;}i:113;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7369;}i:114;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7369;}i:115;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:90:"https://www.cloudera.com/documentation/enterprise/6/6.0/topics/impala_prereqs.html#prereqs";i:1;N;}i:2;i:7399;}i:116;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7489;}i:117;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7491;}i:118;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"Required privileged";i:1;i:3;i:2;i:7491;}i:2;i:7491;}i:119;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7491;}i:120;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7491;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"You will need root or sudo right do intall cdh.";}i:2;i:7522;}i:122;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7569;}i:123;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7571;}i:124;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:5:"Ports";i:1;i:3;i:2;i:7571;}i:2;i:7571;}i:125;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7571;}i:126;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7571;}i:127;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:98:"https://www.cloudera.com/documentation/enterprise/6/6.0/topics/cm_ig_ports.html#concept_k5z_vwy_4j";i:1;N;}i:2;i:7589;}i:128;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7687;}i:129;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7691;}i:130;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:38:"CDH Cluster Hosts and Role assignments";i:1;i:3;i:2;i:7691;}i:2;i:7691;}i:131;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7691;}i:132;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7691;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"Cluster hosts can be broadly described as the following types:";}i:2;i:7741;}i:134;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7803;}i:135;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7803;}i:136;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7803;}i:137;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7803;}i:138;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7807;}i:139;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:7808;}i:140;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Master hosts";}i:2;i:7810;}i:141;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:7822;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:" run Hadoop master processes such as the HDFS NameNode and YARN Resource Manager.";}i:2;i:7824;}i:143;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7905;}i:144;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7905;}i:145;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7905;}i:146;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7905;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:7909;}i:148;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:7910;}i:149;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Utility hosts";}i:2;i:7912;}i:150;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:7925;}i:151;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:" run other cluster processes that are not master processes such as Cloudera Manager and the Hive Metastore.";}i:2;i:7927;}i:152;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8034;}i:153;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8034;}i:154;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:8034;}i:155;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8034;}i:156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:8038;}i:157;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:8039;}i:158;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Gateway hosts";}i:2;i:8041;}i:159;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:8054;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:153:" are client access points for launching jobs in the cluster. The number of gateway hosts required varies depending on the type and size of the workloads.";}i:2;i:8056;}i:161;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8209;}i:162;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8209;}i:163;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:8209;}i:164;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8209;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:8213;}i:166;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:8214;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Worker hosts";}i:2;i:8216;}i:168;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:8228;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" primarily run DataNodes and other distributed processes such as Impalad.";}i:2;i:8230;}i:170;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8303;}i:171;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8303;}i:172;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:8303;}i:173;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8303;}i:174;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"In ";}i:2;i:8305;}i:175;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:112:"https://www.cloudera.com/documentation/enterprise/6/6.0/topics/cm_ig_host_allocations.html#host_role_assignments";i:1;N;}i:2;i:8308;}i:176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:", it explains how to distribute hosts and services on the the hosts.";}i:2;i:8420;}i:177;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8488;}i:178;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8488;}i:179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"For example a cluster of 10 nodes";}i:2;i:8490;}i:180;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8523;}i:181;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8523;}i:182;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:145:"Master 1 : Hdfs name node, JournalNode, FailoverController, YARN ResourceManager, ZooKeeper, JobHistory Server, Spark History Server, Kudu master";}i:2;i:8525;}i:183;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8670;}i:184;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8670;}i:185;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:"Master 2 : Hdfs name node, JournalNode, FailoverController, YARN ResourceManager, ZooKeeper, Kudu master";}i:2;i:8672;}i:186;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8776;}i:187;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8776;}i:188;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:"Master 3 : Kudu master(Kudu requires an odd number of masters for HA)";}i:2;i:8778;}i:189;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8847;}i:190;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8847;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:161:"Uility host: cloudera manager, cloudera manager management service, Hive metastore, impala catalog server, oozie, Zookeeper, JournalNode(requires dedicated disk)";}i:2;i:8849;}i:192;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9010;}i:193;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9010;}i:194;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"one or more gateway hosts: Hue, HiveServer2, Flume, GateWay configuration";}i:2;i:9012;}i:195;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9085;}i:196;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9085;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"worker hosts: hdfs datanode, node manager, impalad, kudu tablet server";}i:2;i:9087;}i:198;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9157;}i:199;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9160;}i:200;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:53:"Installing cloudera manager, cdh and managed services";i:1;i:2;i:2;i:9160;}i:2;i:9160;}i:201;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:9160;}i:202;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9227;}i:203;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"1. Configure a Repository";i:1;i:3;i:2;i:9227;}i:2;i:9227;}i:204;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:9227;}i:205;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9227;}i:206;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"Download the right cloudera-manager.repo for your linux dist. You can find the complete list here:";}i:2;i:9264;}i:207;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9362;}i:208;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9362;}i:209;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:102:"https://www.cloudera.com/documentation/enterprise/6/release-notes/topics/rg_cm_6_version_download.html";i:1;N;}i:2;i:9364;}i:210;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9466;}i:211;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9466;}i:212;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"In our case, it looks like this ";}i:2;i:9468;}i:213;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9506;}i:214;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:299:"
[root@cclindwcloudera01 yum.repos.d]# cat cloudera-manager.repo 
[cloudera-manager]
name=Cloudera Manager 6.0.0
baseurl=https://archive.cloudera.com/cm6/6.0.0/redhat7/yum/
gpgkey=https://archive.cloudera.com/cm6/6.0.0/redhat7/yum/RPM-GPG-KEY-cloudera
gpgcheck=1
enabled=1
autorefresh=0
type=rpm-md
";i:1;N;i:2;N;}i:2;i:9506;}i:215;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9506;}i:216;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:"Import the repository signing GPG key:";}i:2;i:9815;}i:217;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9853;}i:218;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:91:"
sudo rpm --import https://archive.cloudera.com/cm6/6.0.0/redhat7/yum/RPM-GPG-KEY-cloudera
";i:1;N;i:2;N;}i:2;i:9860;}i:219;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9961;}i:220;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"2. Install jdk";i:1;i:3;i:2;i:9961;}i:2;i:9961;}i:221;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:9961;}i:222;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9961;}i:223;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:"As we installed the cloudera repo in step 1, we can install jdk via this repo.";}i:2;i:9987;}i:224;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10065;}i:225;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:248:"
sudo yum install oracle-j2sdk1.8
# yum install java under /usr/java/jdk1.8.0_141-cloudera

# add java path
vim /etc/profile.d/jdk.sh

export JAVA_HOME=/usr/java/jdk1.8.0_141-cloudera
export PATH=$PATH:$JAVA_HOME/bin

source /etc/profile.d/jdk.sh

";i:1;N;i:2;N;}i:2;i:10072;}i:226;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10330;}i:227;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:36:"3. Install cloudera manager packages";i:1;i:3;i:2;i:10330;}i:2;i:10330;}i:228;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:10330;}i:229;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10330;}i:230;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:106:"On the Cloudera Manager Server host, type the following commands to install the Cloudera Manager packages.";}i:2;i:10378;}i:231;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10490;}i:232;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:90:"
sudo yum install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server
";i:1;N;i:2;N;}i:2;i:10490;}i:233;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10490;}i:234;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:"If you are using an Oracle database for Cloudera Manager Server, edit the /etc/default/cloudera-scm-server file on the Cloudera Manager server host. Locate the line that begins with ";}i:2;i:10590;}i:235;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:10772;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"export CMF_JAVA_OPTS";}i:2;i:10774;}i:237;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:10794;}i:238;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" and change the ";}i:2;i:10796;}i:239;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:10812;}i:240;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"-Xmx2G";}i:2;i:10814;}i:241;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:10820;}i:242;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" option to ";}i:2;i:10822;}i:243;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:10833;}i:244;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"-Xmx4G";}i:2;i:10835;}i:245;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:10841;}i:246;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:10843;}i:247;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10844;}i:248;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10846;}i:249;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"Enable Auto-TLS";i:1;i:4;i:2;i:10846;}i:2;i:10846;}i:250;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:10846;}i:251;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10846;}i:252;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"Auto-TLS supports two options:";}i:2;i:10871;}i:253;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10901;}i:254;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10901;}i:255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:"option 1 : Use cloudera manager to generate an internal certificate authority and corresponding certificates.";}i:2;i:10903;}i:256;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11012;}i:257;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11012;}i:258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"option 2 : Use an existing certificate authority and corresponding certificates,";}i:2;i:11014;}i:259;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11094;}i:260;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11094;}i:261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"Here we only show the option 1, for option 2, you can check ";}i:2;i:11096;}i:262;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:85:"https://www.cloudera.com/documentation/enterprise/6/6.0/topics/auto_tls.html#auto_tls";i:1;N;}i:2;i:11156;}i:263;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11241;}i:264;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11241;}i:265;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:203:"Auto-TLS is supported for new installations only. You must enable Auto-TLS before adding any hosts to Cloudera Manager. To enable auto-TLS with an embedded Cloudera Manager CA, run the following command:";}i:2;i:11243;}i:266;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11446;}i:267;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:114:"
sudo JAVA_HOME=/usr/java/jdk1.8.0_141-cloudera /opt/cloudera/cm-agent/bin/certmanager setup --configure-services
";i:1;N;i:2;N;}i:2;i:11454;}i:268;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11454;}i:269;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"if your jdk is installed manually, replace ";}i:2;i:11578;}i:270;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:11621;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"jdk1.8.0_141-cloudera";}i:2;i:11623;}i:272;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:11644;}i:273;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:145:" with your JDK version. If you want to store the files in a directory other than the default (/var/lib/cloudera-scm-server/certmanager), add the ";}i:2;i:11646;}i:274;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:11791;}i:275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"location option as follows:";}i:2;i:11793;}i:276;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11820;}i:277;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:144:"
sudo JAVA_HOME=/usr/java/jdk1.8.0_141-cloudera /opt/cloudera/cm-agent/bin/certmanager --location /opt/cloudera/CMCA setup --configure-services
";i:1;N;i:2;N;}i:2;i:11827;}i:278;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11827;}i:279;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"Note that the generated certificate use the current hostname, make sure your hostname is set before you run the above command.";}i:2;i:11981;}i:280;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12107;}i:281;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12109;}i:282;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"Install and configure databases";i:1;i:3;i:2;i:12109;}i:2;i:12109;}i:283;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:12109;}i:284;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12109;}i:285;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:192:"Cloudera Manager uses various databases and datastores to store information about the Cloudera Manager configuration, as well as information such as the health of the system, or task progress.";}i:2;i:12152;}i:286;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12344;}i:287;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12344;}i:288;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:219:"Although you can deploy different types of databases in a single environment, doing so can create unexpected complications. Cloudera recommends choosing one supported database provider for all of the Cloudera databases.";}i:2;i:12346;}i:289;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12565;}i:290;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12565;}i:291;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:"You can use your own PostgreSQL, MariaDB, MySQL, or Oracle database for the Cloudera Manager Server and other services that use databases. ";}i:2;i:12567;}i:292;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12706;}i:293;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12708;}i:294;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"Required databases";i:1;i:2;i:2;i:12708;}i:2;i:12708;}i:295;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:12708;}i:296;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12708;}i:297;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:343:"The following components all require databases: Cloudera Manager Server, Oozie Server, Sqoop Server, Activity Monitor, Reports Manager, Hive Metastore Server, Hue Server, Sentry Server, Cloudera Navigator Audit Server, and Cloudera Navigator Metadata Server. The type of data contained in the databases and their relative sizes are as follows:";}i:2;i:12740;}i:298;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13084;}i:299;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:13084;}i:300;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13084;}i:301;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13084;}i:302;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13088;}i:303;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13089;}i:304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"Cloudera Manager Server";}i:2;i:13091;}i:305;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13114;}i:306;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:200:" - Contains all the information about services you have configured and their role assignments, all configuration history, commands, users, and running processes. This relatively small database (< 100 ";}i:2;i:13116;}i:307;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"MB";}i:2;i:13316;}i:308;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:") is the most important to back up.";}i:2;i:13318;}i:309;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:13353;}i:310;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:13353;}i:311;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13353;}i:312;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13353;}i:313;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13357;}i:314;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13358;}i:315;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Oozie Server";}i:2;i:13360;}i:316;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13372;}i:317;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:" - Contains Oozie workflow, coordinator, and bundle data. Can grow very large.";}i:2;i:13374;}i:318;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:13452;}i:319;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:13452;}i:320;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13452;}i:321;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13452;}i:322;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13456;}i:323;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13457;}i:324;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"Sqoop Server";}i:2;i:13459;}i:325;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13471;}i:326;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" - Contains entities such as the connector, driver, links and jobs. Relatively small.";}i:2;i:13473;}i:327;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:13558;}i:328;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:13558;}i:329;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13558;}i:330;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13558;}i:331;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13562;}i:332;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13563;}i:333;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"Activity Monitor";}i:2;i:13565;}i:334;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13581;}i:335;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:190:" - Contains information about past activities. In large clusters, this database can grow large. Configuring an Activity Monitor database is only necessary if a MapReduce service is deployed.";}i:2;i:13583;}i:336;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:13773;}i:337;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:13773;}i:338;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13773;}i:339;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13773;}i:340;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13777;}i:341;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13778;}i:342;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"Reports Manager";}i:2;i:13780;}i:343;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13795;}i:344;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:" - Tracks disk utilization and processing activities over time. Medium-sized.";}i:2;i:13797;}i:345;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:13874;}i:346;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:13874;}i:347;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13874;}i:348;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13874;}i:349;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13878;}i:350;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13879;}i:351;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"Hive Metastore Server";}i:2;i:13881;}i:352;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13902;}i:353;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:" - Contains Hive metadata. Relatively small.";}i:2;i:13904;}i:354;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:13948;}i:355;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:13948;}i:356;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:13948;}i:357;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:13948;}i:358;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:13952;}i:359;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13953;}i:360;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Hue Server";}i:2;i:13955;}i:361;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13965;}i:362;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:" - Contains user account information, job submissions, and Hive queries. Relatively small.";}i:2;i:13967;}i:363;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:14057;}i:364;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:14057;}i:365;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:14057;}i:366;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:14057;}i:367;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:14061;}i:368;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:14062;}i:369;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Sentry Server";}i:2;i:14064;}i:370;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:14077;}i:371;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:" - Contains authorization metadata. Relatively small.";}i:2;i:14079;}i:372;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:14132;}i:373;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:14132;}i:374;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:14132;}i:375;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:14132;}i:376;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:14136;}i:377;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:14137;}i:378;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"Cloudera Navigator Audit Server";}i:2;i:14139;}i:379;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:14170;}i:380;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:" - Contains auditing information. In large clusters, this database can grow large.";}i:2;i:14172;}i:381;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:14254;}i:382;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:14254;}i:383;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:14254;}i:384;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:14254;}i:385;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:14258;}i:386;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:14259;}i:387;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"Cloudera Navigator Metadata Server";}i:2;i:14261;}i:388;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:14295;}i:389;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:" - Contains authorization, policies, and audit report metadata. Relatively small.";}i:2;i:14297;}i:390;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:14378;}i:391;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:14378;}i:392;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:14378;}i:393;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14378;}i:394;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:"The Host Monitor and Service Monitor services use local disk-based datastores. For more information, see ";}i:2;i:14380;}i:395;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:81:"https://www.cloudera.com/documentation/enterprise/6/6.0/topics/cm_ig_storage.html";i:1;N;}i:2;i:14485;}i:396;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14566;}i:397;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14566;}i:398;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:"The JDBC connector for your database must be installed on the hosts where you assign the Activity Monitor and Reports Manager roles.";}i:2;i:14568;}i:399;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14700;}i:400;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14700;}i:401;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"Cloudera supports mariaDB/mysql, postgresql, oracle database";}i:2;i:14702;}i:402;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14762;}i:403;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14762;}i:404;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"In our example, we choose to install postgresql. ";}i:2;i:14764;}i:405;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14813;}i:406;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:31:"
yum install postgresql-server
";i:1;N;i:2;N;}i:2;i:14820;}i:407;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:14860;}i:408;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"Install psycopg2 python package";i:1;i:2;i:2;i:14860;}i:2;i:14860;}i:409;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:14860;}i:410;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14860;}i:411;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:261:"Hue in CDH 6 requires version 2.5.4 or higher of the psycopg2 Python package for connecting to a PostgreSQL database. The psycopg2 package is automatically installed as a dependency of Cloudera Manager Agent, but the version installed is often lower than 2.5.4.";}i:2;i:14905;}i:412;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15166;}i:413;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15166;}i:414;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:194:"If you are installing or upgrading to CDH 6 and using PostgreSQL for the Hue database, you must install psycopg2 2.5.4 or higher on all Hue hosts as follows. These examples install version 2.7.5";}i:2;i:15168;}i:415;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15362;}i:416;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:121:"
# install pip
sudo yum install python-pip
# install psycopg via pip
sudo pip install psycopg2==2.7.5 --ignore-installed
";i:1;N;i:2;N;}i:2;i:15369;}i:417;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:15500;}i:418;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:42:"Configuring and Starting postgresql server";i:1;i:2;i:2;i:15500;}i:2;i:15500;}i:419;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:15500;}i:420;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15500;}i:421;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:248:"By default, PostgreSQL only accepts connections on the loopback interface. You must reconfigure PostgreSQL to accept connections from the fully qualified domain names (FQDN) of the hosts hosting the services for which you are configuring databases.";}i:2;i:15555;}i:422;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15803;}i:423;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15803;}i:424;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"1. Make sure that LC_ALL is set to en_US.UTF-8 and initialize the database as follows:";}i:2;i:15805;}i:425;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15897;}i:426;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:98:"
echo 'LC_ALL="en_US.UTF-8"' >> /etc/locale.conf
sudo su -l postgres -c "postgresql-setup initdb"
";i:1;N;i:2;N;}i:2;i:15897;}i:427;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15897;}i:428;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"2. Enable md5 authen, edit the pg_hba.conf, which is usually found in /var/lib/pgsql/data or /etc/postgresql/<version>/main";}i:2;i:16005;}i:429;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16128;}i:430;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:183:"
# add the following line to enable md5
host all all 127.0.0.1/32 md5
# if the following line exsit already in the file, make sure md5 is before ident
host all all 127.0.0.1/32 ident
";i:1;N;i:2;N;}i:2;i:16135;}i:431;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16135;}i:432;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:194:" if you want to access PostgreSQL from a different host, replace 127.0.0.1 with your IP address and update postgresql.conf, which is typically found in the same place as pg_hba.conf, to include:";}i:2;i:16328;}i:433;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16522;}i:434;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:24:"
listen_addresses = '*'
";i:1;N;i:2;N;}i:2;i:16529;}i:435;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16529;}i:436;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:130:"3. Configure settings to ensure your system performs as expected. Update these settings in the /var/lib/pgsql/data/postgresql.conf";}i:2;i:16563;}i:437;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16693;}i:438;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:16695;}i:439;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:26:"Small to mid-sized cluster";i:1;i:3;i:2;i:16695;}i:2;i:16695;}i:440;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:16695;}i:441;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16695;}i:442;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:" For small and mid sized cluster, considering the following settings as starting points. if resources are limited, consider reducing the buffer sizes and checkpoint segments further.";}i:2;i:16732;}i:443;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16914;}i:444;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16914;}i:445;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:201:"Ongoing tuning may be required based on each host's resource utilization. For example, if the Cloudera Manager Server is running on the same host as other roles, the following values may be acceptable:";}i:2;i:16916;}i:446;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17117;}i:447;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:336:"
shared_buffers = 256MB

wal_buffers = 8MB

checkpoint_segments = 16 

# The checkpoint_segments setting is removed in PostgreSQL 9.5 and higher, replaced by min_wal_size and max_wal_size. The PostgreSQL 9.5 release notes provides the following formula for determining the new settings:

max_wal_size = (3 * checkpoint_segments) * 16MB
";i:1;N;i:2;N;}i:2;i:17124;}i:448;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:17470;}i:449;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"Large clusters";i:1;i:3;i:2;i:17470;}i:2;i:17470;}i:450;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:17470;}i:451;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17470;}i:452;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:"For large clusters, which can contain up to 1000 hosts, consider the following settings as starting points.";}i:2;i:17496;}i:453;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17603;}i:454;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:442:"
max_connection = 150 
# For large clusters, each database is typically hosted on a different host. In general, allow each 
# database on a host 100 max connections and then add 50 extra connections. You may have to increase the 
# system resource available to Postgresql as described at 
# https://www.postgresql.org/docs/current/static/runtime-config-connection.html

shared_buffers=1024MB


wal_buffers = 16MB

checkpoint_segments = 128 

";i:1;N;i:2;N;}i:2;i:17610;}i:455;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17610;}i:456;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"4. configure postgres server to start at reboot";}i:2;i:18063;}i:457;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18116;}i:458;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:59:"
systemctl enable postgresql

systemctl restart postgresql
";i:1;N;i:2;N;}i:2;i:18116;}i:459;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:18185;}i:460;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:39:"Creating database for cloudera services";i:1;i:2;i:2;i:18185;}i:2;i:18185;}i:461;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:18185;}i:462;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18185;}i:463;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"We need to create account and database for the following services:";}i:2;i:18238;}i:464;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18304;}i:465;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:18304;}i:466;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18304;}i:467;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18304;}i:468;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" Cloudera Manager Server";}i:2;i:18308;}i:469;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18332;}i:470;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18332;}i:471;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18332;}i:472;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18332;}i:473;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:121:" Cloudera Management Service roles: Activity Monitor (if using the MapReduce service in a CDH 5 cluster); Reports Manager";}i:2;i:18336;}i:474;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18457;}i:475;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18457;}i:476;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18457;}i:477;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18457;}i:478;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" Each Hive metastore";}i:2;i:18461;}i:479;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18481;}i:480;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18481;}i:481;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18481;}i:482;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18481;}i:483;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" Sentry Server";}i:2;i:18485;}i:484;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18499;}i:485;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18499;}i:486;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18499;}i:487;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18499;}i:488;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" Cloudera Navigator Audit Server";}i:2;i:18503;}i:489;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18535;}i:490;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18535;}i:491;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18535;}i:492;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18535;}i:493;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" Cloudera Navigator Metadata Server";}i:2;i:18539;}i:494;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18574;}i:495;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18574;}i:496;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:18574;}i:497;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18574;}i:498;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"The databases must be configured to support the PostgreSQL UTF8 character set encoding.";}i:2;i:18576;}i:499;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18663;}i:500;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18663;}i:501;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:181:"Record the values you enter for database names, usernames, and passwords. The Cloudera Manager installation wizard requires this information to correctly connect to these databases.";}i:2;i:18665;}i:502;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18846;}i:503;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:1885:"
# connect to the database with user postgres
sudo -u postgres psql

# create user and db for cloudera manager server 
CREATE ROLE scm LOGIN PASSWORD 'bioaster';
CREATE DATABASE scm OWNER scm ENCODING 'UTF8';

# create user and db for activity monitor
CREATE ROLE amon LOGIN PASSWORD 'bioaster';
CREATE DATABASE amon OWNER amon ENCODING 'UTF8';

# create user and db for report manager
CREATE ROLE rman LOGIN PASSWORD 'bioaster';
CREATE DATABASE rman OWNER rman ENCODING 'UTF8';

# create user and db for Hue
CREATE ROLE hue LOGIN PASSWORD 'bioaster';
CREATE DATABASE hue OWNER hue ENCODING 'UTF8';

# create user and db for Hive MetaStore server
CREATE ROLE hive LOGIN PASSWORD 'bioaster';
CREATE DATABASE metastore OWNER hive ENCODING 'UTF8';

# create user and db for sentry server
CREATE ROLE sentry LOGIN PASSWORD 'bioaster';
CREATE DATABASE sentry OWNER sentry ENCODING 'UTF8';

# create user and db for cloudera navigator audit server
CREATE ROLE nav LOGIN PASSWORD 'bioaster';
CREATE DATABASE nav OWNER nav ENCODING 'UTF8';

# create user and db for cloudera navigator metadata server
CREATE ROLE navms LOGIN PASSWORD 'bioaster';
CREATE DATABASE navms OWNER navms ENCODING 'UTF8';

# create user and db for Oozie
CREATE ROLE oozie LOGIN PASSWORD 'bioaster';
CREATE DATABASE oozie OWNER oozie ENCODING 'UTF8';


#For PostgreSQL 8.4 and higher, set standard_conforming_strings=off for the Hive Metastore and Oozie databases:
# for hive
ALTER DATABASE metastore SET standard_conforming_strings=off;
# for oozie
ALTER DATABASE oozie SET standard_conforming_strings=off;

# if you did some typo, you can drop database and delete account
drop database if exists acm;
# acm is the database name
# if exists is optional, Use IF EXISTS to prevent an error from removing a non-existent database. PostgreSQL will issue a notice instead.
# delete user account acm
drop user if exists acm;
";i:1;N;i:2;N;}i:2;i:18853;}i:504;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18853;}i:505;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:"After the account and database creation, you can use the following command to connect one to test";}i:2;i:20748;}i:506;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:20845;}i:507;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:43:"
psql -h 127.0.0.1 -U hive -d metastore -W
";i:1;N;i:2;N;}i:2;i:20852;}i:508;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:20905;}i:509;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:36:"Set up the cloudera manager database";i:1;i:2;i:2;i:20905;}i:2;i:20905;}i:510;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:20905;}i:511;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:20905;}i:512;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:"Cloudera Manager Server includes a script that can create and configure a database for itself. The script can:";}i:2;i:20955;}i:513;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21065;}i:514;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:21065;}i:515;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:21065;}i:516;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:21065;}i:517;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" Create the Cloudera Manager Server database configuration file.";}i:2;i:21069;}i:518;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:21133;}i:519;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:21133;}i:520;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:21133;}i:521;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:21133;}i:522;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:" (MariaDB, MySQL, and PostgreSQL) Create and configure a database for Cloudera Manager Server to use.";}i:2;i:21137;}i:523;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:21238;}i:524;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:21238;}i:525;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:21238;}i:526;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:21238;}i:527;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:" (MariaDB, MySQL, and PostgreSQL) Create and configure a user account for Cloudera Manager Server.";}i:2;i:21242;}i:528;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:21340;}i:529;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:21340;}i:530;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:21340;}i:531;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21340;}i:532;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:137:"Although the script can create a database, the following procedures assume that you have already created the database as described above.";}i:2;i:21342;}i:533;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21479;}i:534;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:21481;}i:535;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:34:"Syntax for scm_prepare_database.sh";i:1;i:3;i:2;i:21481;}i:2;i:21481;}i:536;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:21481;}i:537;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:2289:"
# syntax for the scm_prepare_database.sh
/opt/cloudera/cm/schema/scm_prepare_database.sh \
[options] <databaseType> <databaseName> <databaseUser> <password>

# <databaseType> canbe mysql(mysql/mariadb), postgresql, oracle
# <databaseName> The name of the Cloudera Manager Server database to use. The default database name provided in the Cloudera Manager configuration settings is scm, but you are not required to use it.
# <databaseUser> The username for the Cloudera Manager Server database to create or use. The default username provided in the Cloudera Manager configuration settings is scm, but you are not required to use it.
# <password> The password for the <databaseUser> to create or use. If you do not want the password visible on the screen or stored in the command history, do not specify the password, and you are prompted to enter it.

#options
--config-path : The path to the Cloudera Manager Server configuration files. The default is /etc/cloudera-scm-server.

-f/--force : If specified, the script does not stop if an error occurs.

-h|--host : The IP address or hostname of the host where the database is installed. The default is to use localhost.

-p|--password : The admin password for the database application. Use with the -u option. The default is no password. Do not put a space between -p and the password (for example, -phunter2). If you do not want the password visible on the screen or stored in the command history, use the -p option without specifying a password, and you are prompted to enter it. If you have already created the database, do not use this option.

-P|--port : DB port number

--scm-host : The hostname where the Cloudera Manager Server is installed. If the Cloudera Manager Server and the database are installed on the same host, do not use this option or the -h option.

--scm-password-script : A script to execute whose stdout provides the password for user SCM (for the database).

-u|--user : The admin username of the database, use it with the -p option, if you already created the database, do not use this option.

# In our case, the command looks like this
sudo /opt/cloudera/cm/schema/scm_prepare_database.sh postgresql scm scm 

# you should see the return message like this
All done, your SCM database is configured correctly!
";i:1;N;i:2;N;}i:2;i:21532;}i:538;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21532;}i:539;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:207:"To create a new database, you must specify the -u and -p parameters for a user with privileges to create databases. If you have already created the database as instructed above, do not specify these options.";}i:2;i:23831;}i:540;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:24038;}i:541;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:24040;}i:542;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"Install cdh and other software";i:1;i:2;i:2;i:24040;}i:2;i:24040;}i:543;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:24040;}i:544;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:24040;}i:545;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"After setting up the Cloudera Manager database, we can use cloudera manager server to install cdh and other software.";}i:2;i:24084;}i:546;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:24207;}i:547;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:619:"
# start Cloudera Manager Server
sudo systemctl start cloudera-scm-server

# To observe the startup process, run the following on the Cloudera Manager Server host:
sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log

# When you see this log entry, the Cloudera Manager Admin Console is ready:
INFO WebServerImpl:com.cloudera.server.cmf.WebServerImpl: Started Jetty server.

# In a web browser, go to http://<server_host>:7180, where <server_host> is the FQDN or IP address of the host where the Cloudera Manager Server is running.

# log in to the Cloudera Manager Admin Console
login : admin
pwd: admin

";i:1;N;i:2;N;}i:2;i:24207;}i:548;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:24836;}i:549;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Trouble shooting";i:1;i:1;i:2;i:24836;}i:2;i:24836;}i:550;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:24836;}i:551;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:24836;}i:552;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"1. Can't Generate certficate for hosts when installing scm-agents with auto-tls enabled";}i:2;i:24868;}i:553;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:24955;}i:554;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:24955;}i:555;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"I did not find out what causes this error, I think it's a port problem";}i:2;i:24957;}i:556;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:25027;}i:557;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:25027;}i:558;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Solutions :";}i:2;i:25029;}i:559;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:25040;}i:560;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:213:"
# remove the generated ca
rm -rf /var/lib/cloudera-scm-server/certmanager

# regenerate ca without the --configure-services
JAVA_HOME=/usr/java/jdk1.8.0_141-cloudera /opt/cloudera/cm-agent/bin/certmanager setup

";i:1;N;i:2;N;}i:2;i:25047;}i:561;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:25268;}i:562;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:25268;}}