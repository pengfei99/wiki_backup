a:60:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"Data Structure";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:31;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"Introduction";i:1;i:2;i:2;i:31;}i:2;i:31;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:31;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:31;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:456:"A data structure is a specialized format for organizing and storing data. General data structure types include the array, the file, the record, the table, the tree, and so on. Any data structure is designed to organize data to suit a specific purpose so that it can be accessed and worked with in appropriate ways. In computer programming, a data structure may be selected or designed to store data for the purpose of working on it with various algorithms.";}i:2;i:57;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:513;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:513;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:280:"A data structure is more than just the specification of the data type(Int, String, etc.), it also defines the relations between data which are in the same structure. For example, in a Tree[String] structure, all items must be a string, but some string has children, some does not.";}i:2;i:515;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:795;}i:12;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:797;}i:13;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"Terminologies";i:1;i:3;i:2;i:797;}i:2;i:797;}i:14;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:797;}i:15;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:821;}i:16;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:821;}i:17;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:821;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:374:" Data: Data is information that has been translated into a form that is efficient for movement or processing. Relative to today's computers and transmission media, data is information converted into binary digital form. It is acceptable for data to be used as a singular subject or a plural subject. Raw data is a term used to describe data in its most basic digital format.";}i:2;i:825;}i:19;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1199;}i:20;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1199;}i:21;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1199;}i:22;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1199;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:322:" Data type: is a classification that specifies which type of value a variable has and what type of mathematical, relational or logical operations can be applied to it without causing an error. A string, for example, is a data type that is used to classify text and an integer is a data type used to classify whole numbers.";}i:2;i:1203;}i:24;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1525;}i:25;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1525;}i:26;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1525;}i:27;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1527;}i:28;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:35:"Logic structure vs Physic structure";i:1;i:3;i:2;i:1527;}i:2;i:1527;}i:29;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1527;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1527;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:239:"Short answer, logical data structure simply denotes the content, context, and meaning of the data in question. While the physical data structure shows us the actual location and format of the data stored in memory(hardware point of view). ";}i:2;i:1574;}i:32;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1813;}i:33;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1813;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:671:"Depending on which language and the compiler or interpreter you use, the physic structure changes from the same Logic structure. For example, you can directly manipulate memory as in C. It gives you pointer access and memory use without respect to type, contrary to strongly typed languages like Java. Data is modeled and stored on a contiguous indexed array, some of which is for the temporary memory on the stack or persistent memory on the heap. Heap memory persists until you explicitly tell the memory allocator to forget that memory. In the array of memory, there are the standard type declarations, which to a computer is an interpretation of bits, 0's and/or 1's.";}i:2;i:1815;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2486;}i:36;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2489;}i:37;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"Basic Data Structures";i:1;i:2;i:2;i:2489;}i:2;i:2489;}i:38;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2489;}i:39;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2489;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:178:"To illustrate these basic data structures with real code examples, we choose Java as our programming language. The below data structures hierarchy shows the Java collections lib.";}i:2;i:2524;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2703;}i:42;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2703;}i:43;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"Java Collection framework";i:1;i:3;i:2;i:2703;}i:2;i:2703;}i:44;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2703;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2703;}i:46;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:57:":employes:pengfei.liu:java:java-collection-hierarchy.jpeg";i:1;s:0:"";i:2;N;i:3;s:3:"400";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:2739;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2805;}i:48;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2805;}i:49;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:56:":employes:pengfei.liu:java:java-collection-hierarchy.png";i:1;s:0:"";i:2;N;i:3;s:3:"400";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:2807;}i:50;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2872;}i:51;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2874;}i:52;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:3:"FAQ";i:1;i:2;i:2;i:2874;}i:2;i:2874;}i:53;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2874;}i:54;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2874;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"1. Collection VS Collections ";}i:2;i:2891;}i:56;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:56:"employes:pengfei.liu:java:data_structure:faq:collections";i:1;s:25:"Collections Vs Collection";}i:2;i:2920;}i:57;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3006;}i:58;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3007;}i:59;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3007;}}