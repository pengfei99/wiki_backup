a:87:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"Pourquoi Bazaar ?";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:17:"/si/outils/bazaar";i:1;s:10:"GNU/Bazaar";}i:2;i:34;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" est un outil de gestion de révisions (RCS). Il en existe ";}i:2;i:66;}i:6;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:69:"https://en.wikipedia.org/wiki/Comparison_of_revision_control_software";i:1;s:17:"beaucoup d'autres";}i:2;i:125;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:", dont les plus connus sont Subversion, Git et Mercurial. ";}i:2;i:216;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:274;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:274;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"L'une des différences majeures entre les différentes solutions est le ";}i:2;i:276;}i:11;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:348;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"modèle de dépôt";}i:2;i:349;}i:13;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:367;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:". Historiquement toutes les solutions étaient ";}i:2;i:368;}i:15;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:415;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"centralisées";}i:2;i:417;}i:17;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:430;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" et dépendaient donc de l'accès à un serveur central. Les solutions modernes sont ";}i:2;i:432;}i:19;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:517;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"décentralisées";}i:2;i:519;}i:21;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:535;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:", ce qui permet, entre autres, le travail hors connexion.";}i:2;i:537;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:594;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:594;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:427:"La gestion de révision est un concept simple, mais la prise en main de certaines solutions peut-être compliquée. De plus, certains concepts sont difficiles à appréhender. Pour ces raisons, il est important d'adopter une solution simple et facile d'accès afin d'en favoriser l'adoption. Adapter une solution déjà maitrisée par un membre de l'équipe permet d'avoir un référent vers qui se tourner en cas de problème.";}i:2;i:596;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1023;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1023;}i:28;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:1025;}i:29;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1027;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:725:"Pour ma part, j'utilise Bazaar depuis plusieurs années. J'ai eu l'occasion de gérer plusieurs projets professionnels avec Bazaar et je n'ai encore jamais rencontré de limitation qui m'aurait fait considérer une autre solution. J'ai en fait eu l'occasion de tester certains concurrents (Git, Hg), mais sans grande conviction. La prise en main de Bazaar est simple, et la syntaxe est proche de celle adoptée par les autres solutions. Ceci en fait donc un bon candidat pour un premier contact avec un RCS. Les échanges de données entre les différents participants d'un projet se font via SSH, ce qui évite d'avoir à déployer de nouveaux services ou d'avoir à gérer indépendamment de nouvelles permissions d'accès.";}i:2;i:1028;}i:31;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1753;}i:32;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:1754;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1756;}i:34;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1757;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" - Tanguy";}i:2;i:1759;}i:36;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1768;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1770;}i:38;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1770;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:141:"De nombreux articles comparent les différents systèmes et les discussions s'élargissent souvent à tout l'écosystème entourant le RCS : ";}i:2;i:1772;}i:40;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1914;}i:41;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1914;}i:42;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1914;}i:43;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1914;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:1918;}i:45;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:83:"http://blog.experimentalworks.net/2014/05/mercurial-vs-git-vs-bazaar-the-aftermath/";i:1;s:43:"Mercurial vs. Git vs. Bazaar: The aftermath";}i:2;i:1919;}i:46;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2050;}i:47;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2050;}i:48;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2050;}i:49;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2050;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2054;}i:51;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:67:"http://duckrowing.com/2014/04/25/git-vs-mercurial-vs-bazaar-vs-etc/";i:1;s:36:"Git vs Mercurial vs Bazaar vs Etc…";}i:2;i:2055;}i:52;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2163;}i:53;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2163;}i:54;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2163;}i:55;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2163;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2167;}i:57;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:70:"http://doc.bazaar.canonical.com/migration/en/why-switch-to-bazaar.html";i:1;s:21:"Why Switch to Bazaar?";}i:2;i:2168;}i:58;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2264;}i:59;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2264;}i:60;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2264;}i:61;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2264;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2268;}i:63;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:69:"http://komar.bitcheese.net/en/git-sucks-or-why-do-I-use-darcs-instead";i:1;s:40:"Git sucks, or why do I use darcs instead";}i:2;i:2269;}i:64;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2383;}i:65;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2383;}i:66;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2383;}i:67;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2383;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2387;}i:69;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:60:"http://duckrowing.com/2013/12/26/bzr-init-a-bazaar-tutorial/";i:1;s:27:"Bzr Init: A Bazaar Tutorial";}i:2;i:2388;}i:70;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:2480;}i:71;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:2483;}i:72;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2485;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:496:"Bazaar, by default, exactly matches the ideal model. Now, I know my more cynical readers will point that this is because I picked Bazaar’s model as the “ideal” model, but they would be incorrect. Bazaar is not the first DVCS I used, nor did my ideal model derive from Bazaar. The ideal model is what I think should happen when branching and merging. As I said earlier, I don’t think the model I laid out is controversial. I use Bazaar because it meets the model, not the other way around.";}i:2;i:2486;}i:74;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2982;}i:75;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:2983;}i:76;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2985;}i:77;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2985;}i:78;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2985;}i:79;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2985;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:2989;}i:81;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:2990;}i:82;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2993;}i:83;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2993;}i:84;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2993;}i:85;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2995;}i:86;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2995;}}