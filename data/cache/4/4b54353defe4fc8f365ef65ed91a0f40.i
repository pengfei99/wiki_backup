a:901:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"Lesson03 SQL basics";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:36;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"3.1 SQL Types";i:1;i:2;i:2;i:36;}i:2;i:36;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:36;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:36;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:127:"Each column in a database table is required to have a name and a data type. The complete types docs of postgresql can be found ";}i:2;i:63;}i:8;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:48:"https://www.postgresql.org/docs/11/datatype.html";i:1;N;}i:2;i:190;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:238;}i:10;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:240;}i:11;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"3.1.1 SQL General Data Types";i:1;i:3;i:2;i:240;}i:2;i:240;}i:12;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:240;}i:13;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:279;}i:14;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:279;}i:15;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:279;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" Boolean";}i:2;i:283;}i:17;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:291;}i:18;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:291;}i:19;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:291;}i:20;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:291;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:" Character types such as char, varchar, and text.";}i:2;i:295;}i:22;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:344;}i:23;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:344;}i:24;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:344;}i:25;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:344;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:" Numeric types such as integer and floating-point number.";}i:2;i:348;}i:27;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:405;}i:28;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:405;}i:29;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:405;}i:30;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:405;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" Temporal types such as date, time, timestamp, and interval";}i:2;i:409;}i:32;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:468;}i:33;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:468;}i:34;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:468;}i:35;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:468;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" Enumerated Types";}i:2;i:472;}i:37;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:489;}i:38;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:489;}i:39;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:489;}i:40;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:489;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" Binary Objects (BLOB)";}i:2;i:493;}i:42;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:515;}i:43;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:515;}i:44;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:515;}i:45;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:517;}i:46;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:7:"Boolean";i:1;i:4;i:2;i:517;}i:2;i:517;}i:47;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:517;}i:48;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:517;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:130:"A column of boolean type can have three states: TRUE, FALSE and NULL. In RDBMs, the value of type boolean is quite flexible, TRUE ";}i:2;i:534;}i:50;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"=>";}i:2;i:664;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" 't', 'true', 'y', 'yes','1' ; FALSE ";}i:2;i:666;}i:52;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"=>";}i:2;i:703;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:91:" 'f','false','n','no','0'; We can use logical operator on them: =,<>(not equal),not,and,or.";}i:2;i:705;}i:54;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:796;}i:55;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:798;}i:56;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"Character types";i:1;i:4;i:2;i:798;}i:2;i:798;}i:57;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:798;}i:58;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:798;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:"We have three primary character types:";}i:2;i:823;}i:60;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:861;}i:61;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:861;}i:62;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:861;}i:63;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:861;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" character(n) or char(n): fixed-length, blank padded";}i:2;i:865;}i:65;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:917;}i:66;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:917;}i:67;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:917;}i:68;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:917;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:" character varying(n) or varchar(n): variable-length with limit";}i:2;i:921;}i:70;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:984;}i:71;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:984;}i:72;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:984;}i:73;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:984;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:" text(varchar): variable unlimited length";}i:2;i:988;}i:75;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1029;}i:76;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1029;}i:77;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1029;}i:78;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1029;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:167:"Both char(n) and varchar(n) can store up to n characters in length(n is a positive integer), if you try to store a longer string in the column, it will issue an error.";}i:2;i:1031;}i:80;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1198;}i:81;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1198;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:216:"In postgresql server, there is no performance difference among three character types. In most situation, you should use text or varchar. If you want postgresql help you to check the length limit, then use varchar(n).";}i:2;i:1200;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1416;}i:84;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1419;}i:85;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"Numeric Types";i:1;i:4;i:2;i:1419;}i:2;i:1419;}i:86;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1419;}i:87;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1440;}i:88;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1440;}i:89;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1440;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:174:" Integers: SQL only specifies the integer types integer (or int), smallint, and bigint. The type names int2, int4, and int8 are extensions, which are also used by some RDBMS.";}i:2;i:1444;}i:91;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1618;}i:92;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1618;}i:93;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1618;}i:94;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1618;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:188:" Arbitrary-Precision Numbers: The types decimal and numeric are equivalent. Both types are part of the SQL standard. Calculations with numeric values yield exact results whenever possible.";}i:2;i:1622;}i:96;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1810;}i:97;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1810;}i:98;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1810;}i:99;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1810;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:220:" Floating-Points Types: These types are usually implementations of IEEE Standard 754 for Binary Floating-Point Arithmetic (single and double precision, respectively). The data types real and double precision are inexact.";}i:2;i:1814;}i:101;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2034;}i:102;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2034;}i:103;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2034;}i:104;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2034;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:239:" Serial Types: The data types smallserial, serial and bigserial are not true types, but merely a notational convenience for creating unique identifier columns. Theyâ€™re similar to the AUTO_INCREMENT property supported by some other RDBMS.";}i:2;i:2038;}i:106;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2277;}i:107;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2277;}i:108;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2277;}i:109;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:4;i:1;i:11;i:2;i:2279;}i:2;i:2278;}i:110;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:2278;}i:111;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2278;}i:112;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2278;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"NAME";}i:2;i:2280;}i:114;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:2284;}i:115;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2284;}i:116;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" STORAGE SIZE";}i:2;i:2285;}i:117;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:2298;}i:118;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2298;}i:119;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" DESCRIPTION";}i:2;i:2299;}i:120;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:2311;}i:121;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2311;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" RANGE";}i:2;i:2312;}i:123;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:2318;}i:124;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2319;}i:125;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:2319;}i:126;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2319;}i:127;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2319;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"Smallint ";}i:2;i:2321;}i:129;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2330;}i:130;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2330;}i:131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"2 bytes ";}i:2;i:2331;}i:132;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2339;}i:133;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2339;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"small-range integer";}i:2;i:2340;}i:135;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2359;}i:136;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2359;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" -32768 to +32767";}i:2;i:2360;}i:138;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2377;}i:139;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2378;}i:140;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2378;}i:141;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:2378;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"Integer  ";}i:2;i:2380;}i:143;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2389;}i:144;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2389;}i:145;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"4 bytes ";}i:2;i:2390;}i:146;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2398;}i:147;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2398;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"typical choice for integer";}i:2;i:2399;}i:149;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2425;}i:150;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2425;}i:151;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" -2147483648 to +2147483647";}i:2;i:2426;}i:152;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2453;}i:153;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2454;}i:154;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2454;}i:155;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:2454;}i:156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"Bigint   ";}i:2;i:2456;}i:157;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2465;}i:158;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2465;}i:159;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"8 bytes ";}i:2;i:2466;}i:160;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2474;}i:161;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2474;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"large-range integer ";}i:2;i:2475;}i:163;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2495;}i:164;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2495;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"-9223372036854775808 to +9223372036854775807";}i:2;i:2496;}i:166;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2540;}i:167;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2541;}i:168;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2541;}i:169;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:2541;}i:170;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"decimal  ";}i:2;i:2543;}i:171;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2552;}i:172;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2552;}i:173;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"variable";}i:2;i:2553;}i:174;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2561;}i:175;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2561;}i:176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" user-specified precision,exact ";}i:2;i:2562;}i:177;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2594;}i:178;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2594;}i:179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" up to 131072 digits before the decimal point; up to 16383 digits after the decimal point";}i:2;i:2595;}i:180;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2684;}i:181;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2685;}i:182;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2685;}i:183;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2685;}i:184;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"numeric ";}i:2;i:2687;}i:185;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2695;}i:186;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2695;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" variable";}i:2;i:2696;}i:188;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2705;}i:189;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2705;}i:190;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" user-specified precision,exact ";}i:2;i:2706;}i:191;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2738;}i:192;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2738;}i:193;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" up to 131072 digits before the decimal point;up to 16383 digits after the decimal point";}i:2;i:2739;}i:194;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2827;}i:195;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2828;}i:196;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2828;}i:197;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:2828;}i:198;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"real  ";}i:2;i:2830;}i:199;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2836;}i:200;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2836;}i:201;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 4 bytes ";}i:2;i:2837;}i:202;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2846;}i:203;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2846;}i:204;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:" variable-precision,inexact ";}i:2;i:2847;}i:205;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2875;}i:206;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2875;}i:207;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" 6 decimal digits precision";}i:2;i:2876;}i:208;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2903;}i:209;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2904;}i:210;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2904;}i:211;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2904;}i:212;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"double precision";}i:2;i:2906;}i:213;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2922;}i:214;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2922;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 8 bytes ";}i:2;i:2923;}i:216;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2932;}i:217;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2932;}i:218;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:" variable-precision,inexact ";}i:2;i:2933;}i:219;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2961;}i:220;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2961;}i:221;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:" 15 decimal digits precision";}i:2;i:2962;}i:222;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:2990;}i:223;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:2991;}i:224;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:2991;}i:225;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:2991;}i:226;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"smallserial ";}i:2;i:2993;}i:227;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3005;}i:228;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3005;}i:229;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 2 bytes ";}i:2;i:3006;}i:230;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3015;}i:231;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3015;}i:232;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" small autoincrementing integer ";}i:2;i:3016;}i:233;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3048;}i:234;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3048;}i:235;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 1 to 32767";}i:2;i:3049;}i:236;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3060;}i:237;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3061;}i:238;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3061;}i:239;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3061;}i:240;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"serial ";}i:2;i:3063;}i:241;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3070;}i:242;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3070;}i:243;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 4 bytes ";}i:2;i:3071;}i:244;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3080;}i:245;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3080;}i:246;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" autoincrementing integer ";}i:2;i:3081;}i:247;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3107;}i:248;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3107;}i:249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" 1 to 2147483647";}i:2;i:3108;}i:250;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3124;}i:251;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3125;}i:252;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3125;}i:253;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3125;}i:254;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"bigserial ";}i:2;i:3127;}i:255;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3137;}i:256;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3137;}i:257;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 8 bytes ";}i:2;i:3138;}i:258;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3147;}i:259;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3147;}i:260;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" large autoincrementing integer ";}i:2;i:3148;}i:261;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3180;}i:262;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3180;}i:263;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"1 to 9223372036854775807";}i:2;i:3181;}i:264;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3205;}i:265;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3206;}i:266;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:3206;}i:2;i:3206;}i:267;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3208;}i:268;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"Temporal types";i:1;i:4;i:2;i:3208;}i:2;i:3208;}i:269;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:3208;}i:270;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3208;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:145:"Cover SQL date and time type full set.  Dates are counted according to the Gregorian calendar, even in years before
that calendar was introduced.";}i:2;i:3232;}i:272;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3378;}i:273;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:6;i:1;i:7;i:2;i:3379;}i:2;i:3378;}i:274;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:3378;}i:275;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3378;}i:276;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3378;}i:277;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"NAME";}i:2;i:3380;}i:278;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:3384;}i:279;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3384;}i:280;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"STORAGE SIZE";}i:2;i:3385;}i:281;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:3397;}i:282;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3397;}i:283;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"DESCRIPTION";}i:2;i:3398;}i:284;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:3409;}i:285;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3409;}i:286;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"LOW VALUE";}i:2;i:3410;}i:287;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:3419;}i:288;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3419;}i:289;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"HIGH VALUE";}i:2;i:3420;}i:290;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:3430;}i:291;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3441;}i:292;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:3441;}i:293;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3441;}i:294;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3441;}i:295;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:3441;}i:296;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3441;}i:297;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3441;}i:298;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:"timestamp [ (p) ][ without time zone ]";}i:2;i:3443;}i:299;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3481;}i:300;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3481;}i:301;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"8 bytes ";}i:2;i:3482;}i:302;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3490;}i:303;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3490;}i:304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:" both date and time (no time zone)";}i:2;i:3491;}i:305;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3525;}i:306;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3525;}i:307;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"4713 BC";}i:2;i:3526;}i:308;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3533;}i:309;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3533;}i:310;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 294276 AD ";}i:2;i:3534;}i:311;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3545;}i:312;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3545;}i:313;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 1 microsecond";}i:2;i:3546;}i:314;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3560;}i:315;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3561;}i:316;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3561;}i:317;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3561;}i:318;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"timestamp [ (p) ] with time zone ";}i:2;i:3563;}i:319;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3596;}i:320;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3596;}i:321;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"8 bytes";}i:2;i:3597;}i:322;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3604;}i:323;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3604;}i:324;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:" both date and time, with time zone ";}i:2;i:3605;}i:325;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3641;}i:326;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3641;}i:327;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 4713 BC";}i:2;i:3642;}i:328;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3650;}i:329;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3650;}i:330;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 294276 AD ";}i:2;i:3651;}i:331;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3662;}i:332;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3662;}i:333;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 1 microsecond";}i:2;i:3663;}i:334;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3677;}i:335;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3678;}i:336;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3678;}i:337;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3678;}i:338;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"date ";}i:2;i:3680;}i:339;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3685;}i:340;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3685;}i:341;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 4 bytes";}i:2;i:3686;}i:342;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3694;}i:343;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3694;}i:344;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" date (no time of day) ";}i:2;i:3695;}i:345;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3718;}i:346;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3718;}i:347;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 4713 BC ";}i:2;i:3719;}i:348;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3728;}i:349;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3728;}i:350;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" 5874897 AD ";}i:2;i:3729;}i:351;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3741;}i:352;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3741;}i:353;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" 1 day";}i:2;i:3742;}i:354;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3748;}i:355;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3749;}i:356;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3749;}i:357;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3749;}i:358;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"time [ (p) ][ without time zone ] ";}i:2;i:3751;}i:359;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3785;}i:360;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3785;}i:361;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 8 bytes ";}i:2;i:3786;}i:362;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3795;}i:363;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3795;}i:364;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" time of day (no date)";}i:2;i:3796;}i:365;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3818;}i:366;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3818;}i:367;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" 00:00:00";}i:2;i:3819;}i:368;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3828;}i:369;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3828;}i:370;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 24:00:00 ";}i:2;i:3829;}i:371;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3839;}i:372;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3839;}i:373;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 1 microsecond";}i:2;i:3840;}i:374;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3854;}i:375;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3855;}i:376;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3855;}i:377;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3855;}i:378;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"time [ (p) ] with time zone ";}i:2;i:3857;}i:379;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3885;}i:380;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3885;}i:381;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 12 bytes ";}i:2;i:3886;}i:382;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3896;}i:383;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3896;}i:384;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" time of day (no date), with time zone";}i:2;i:3897;}i:385;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3935;}i:386;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3935;}i:387;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" 00:00:00+1459 ";}i:2;i:3936;}i:388;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3951;}i:389;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3951;}i:390;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" 24:00:00-1459 ";}i:2;i:3952;}i:391;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3967;}i:392;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3967;}i:393;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 1 microsecond";}i:2;i:3968;}i:394;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:3982;}i:395;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:3983;}i:396;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:3983;}i:397;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:3983;}i:398;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"interval [ fields ] [ (p) ] ";}i:2;i:3985;}i:399;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4013;}i:400;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4013;}i:401;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 16 bytes ";}i:2;i:4014;}i:402;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4024;}i:403;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4024;}i:404;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" time interval ";}i:2;i:4025;}i:405;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4040;}i:406;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4040;}i:407;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" -178000000 years ";}i:2;i:4041;}i:408;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4059;}i:409;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4059;}i:410;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" 178000000 years ";}i:2;i:4060;}i:411;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4077;}i:412;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:4077;}i:413;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" 1 microsecond ";}i:2;i:4078;}i:414;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:4093;}i:415;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:4094;}i:416;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:4094;}i:2;i:4094;}i:417;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4094;}i:418;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:170:"Value p specifies the number of fractional digits retained in the seconds' field. Any date or time literal input needs to be enclosed in single quotes, like text strings.";}i:2;i:4096;}i:419;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4266;}i:420;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4268;}i:421;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Enumerated Types";i:1;i:4;i:2;i:4268;}i:2;i:4268;}i:422;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:4268;}i:423;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4268;}i:424;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:121:"Enumerated (enum) types are data types that comprise a static, ordered set of values. For example: ('sad', 'ok', 'happy')";}i:2;i:4294;}i:425;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4415;}i:426;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4417;}i:427;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:4:"BLOB";i:1;i:4;i:2;i:4417;}i:2;i:4417;}i:428;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:4417;}i:429;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4417;}i:430;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:247:"The SQL standard defines a different binary string type, called BLOB or BINARY LARGE OBJECT. MySQL and ORACLE give the same name. PostgreSQL has type bytea. The input format is different but the provided functions and operators are mostly the same";}i:2;i:4430;}i:431;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4677;}i:432;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4679;}i:433;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"3.1.2 Other Types";i:1;i:3;i:2;i:4679;}i:2;i:4679;}i:434;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4679;}i:435;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4707;}i:436;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4707;}i:437;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4707;}i:438;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" Monetary Type";}i:2;i:4711;}i:439;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4725;}i:440;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4725;}i:441;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4725;}i:442;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4725;}i:443;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" Geometric Types";}i:2;i:4729;}i:444;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4745;}i:445;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4745;}i:446;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4745;}i:447;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4745;}i:448;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" Network address";}i:2;i:4749;}i:449;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4765;}i:450;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4765;}i:451;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4765;}i:452;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4765;}i:453;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:" UUID for storing Universally Unique Identifiers";}i:2;i:4769;}i:454;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4817;}i:455;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4817;}i:456;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4817;}i:457;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4817;}i:458;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" XML Type";}i:2;i:4821;}i:459;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4830;}i:460;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4830;}i:461;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4830;}i:462;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4830;}i:463;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" JSON Type";}i:2;i:4834;}i:464;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4844;}i:465;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4844;}i:466;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4844;}i:467;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4844;}i:468;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" Array for storing array strings, numbers, etc.";}i:2;i:4848;}i:469;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4895;}i:470;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4895;}i:471;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4895;}i:472;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4895;}i:473;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" Composite Types";}i:2;i:4899;}i:474;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4915;}i:475;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4915;}i:476;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4915;}i:477;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4915;}i:478;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" Range Types";}i:2;i:4919;}i:479;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4931;}i:480;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4931;}i:481;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4931;}i:482;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4933;}i:483;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"3.1.3 The Null Value";i:1;i:3;i:2;i:4933;}i:2;i:4933;}i:484;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4933;}i:485;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4933;}i:486;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:358:"NULL is not a value, it is a special marker to indicate that a data value does not exist in the database. It is used to signify missing or unknown values. The SQL keyword NULL is used to indicate these values. NULL really isnâ€™t a specific value as much as it is an indicator. Donâ€™t think of NULL as similar to zero or blank or false, it isnâ€™t the same.";}i:2;i:4965;}i:487;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5323;}i:488;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5323;}i:489;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:167:"You must use the IS NULL or IS NOT NULL operators to check for a NULL value. It is not possible to test for NULL values with comparison operators, such as =, <, or <>.";}i:2;i:5325;}i:490;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5492;}i:491;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5494;}i:492;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"3.2 SQL coding convention";i:1;i:2;i:2;i:5494;}i:2;i:5494;}i:493;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5494;}i:494;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5494;}i:495;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"The below list is the general sql coding convention";}i:2;i:5533;}i:496;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5585;}i:497;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5585;}i:498;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5585;}i:499;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5585;}i:500;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" Use comments to describe what SQL does";}i:2;i:5589;}i:501;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5628;}i:502;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5628;}i:503;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5628;}i:504;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5628;}i:505;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" Put each major SQL statement on a new line";}i:2;i:5632;}i:506;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5675;}i:507;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5675;}i:508;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5675;}i:509;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5675;}i:510;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:204:" Put SQL keywords, built-in function and data types in the uppercase. Use CamelCase capitalization and do not separate name parts with underscores or use lower case and underscores to separate name parts.";}i:2;i:5679;}i:511;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5883;}i:512;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5883;}i:513;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5883;}i:514;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5883;}i:515;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:" Set standard abbreviations for frequently used objects, such as tbl for tables or idx for indexes";}i:2;i:5887;}i:516;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5985;}i:517;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5985;}i:518;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5985;}i:519;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5985;}i:520;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:" Use single quotation for characters, strings, binary and Unicode";}i:2;i:5989;}i:521;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6054;}i:522;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6054;}i:523;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6054;}i:524;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6054;}i:525;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" Set a rule for naming aliases";}i:2;i:6058;}i:526;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6088;}i:527;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6088;}i:528;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6088;}i:529;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6088;}i:530;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:" Use indenting to align wrapped long lines";}i:2;i:6092;}i:531;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6134;}i:532;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6134;}i:533;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6134;}i:534;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6134;}i:535;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" Use parentheses in complex mathematical expressions";}i:2;i:6138;}i:536;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6190;}i:537;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6190;}i:538;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6190;}i:539;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6190;}i:540;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" Be consistent with indentation â€“ use either tab or space";}i:2;i:6194;}i:541;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6253;}i:542;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6253;}i:543;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6253;}i:544;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6253;}i:545;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:" Donâ€™t avoid using line breaks to improve readability";}i:2;i:6257;}i:546;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6312;}i:547;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6312;}i:548;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6312;}i:549;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6312;}i:550;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" Code grouping â€“ keep the lines that execute a certain task in separate code blocks";}i:2;i:6316;}i:551;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6401;}i:552;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6401;}i:553;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6401;}i:554;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6401;}i:555;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:6403;}i:556;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"IMPORTANT NOTE";}i:2;i:6405;}i:557;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:6419;}i:558;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:": SQL language is case insensitive (for the keywords).";}i:2;i:6421;}i:559;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6475;}i:560;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6477;}i:561;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"3.3 Data manipulation language";i:1;i:2;i:2;i:6477;}i:2;i:6477;}i:562;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:6477;}i:563;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6520;}i:564;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6520;}i:565;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6520;}i:566;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:" SELECT : Retrieve certain records (get data) from a database";}i:2;i:6524;}i:567;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6585;}i:568;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6585;}i:569;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6585;}i:570;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6585;}i:571;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:" INSERT : Creates a record (insert data) into a table";}i:2;i:6589;}i:572;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6642;}i:573;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6642;}i:574;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6642;}i:575;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6642;}i:576;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:" UPDATE : Modifies records (update data) within a table";}i:2;i:6646;}i:577;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6701;}i:578;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6701;}i:579;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6701;}i:580;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6701;}i:581;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:" DELETE : Delete records (remove data) from a database table";}i:2;i:6705;}i:582;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6765;}i:583;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6765;}i:584;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6765;}i:585;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6765;}i:586;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:" MERGE  : (UPSERT) Update a record if it already exists, otherwise, inserts a new row in a table.";}i:2;i:6769;}i:587;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6866;}i:588;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6866;}i:589;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6866;}i:590;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:6868;}i:591;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"3.4 Data definition language";i:1;i:2;i:2;i:6868;}i:2;i:6868;}i:592;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:6868;}i:593;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6910;}i:594;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6910;}i:595;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6910;}i:596;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:" CREATE: Create the database or its objects (like table, index, function, views, store procedure and triggers)";}i:2;i:6914;}i:597;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7024;}i:598;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7024;}i:599;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7024;}i:600;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7024;}i:601;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:" DROP: Deletes objects (like an entire table, a view of a table or other objects)";}i:2;i:7028;}i:602;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7109;}i:603;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7109;}i:604;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7109;}i:605;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7109;}i:606;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:" ALTER: Modifies an existing database object, such as a table";}i:2;i:7113;}i:607;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7174;}i:608;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7174;}i:609;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7174;}i:610;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7174;}i:611;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" RENAME: Rename an object existing in the database";}i:2;i:7178;}i:612;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7228;}i:613;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7228;}i:614;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7228;}i:615;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7228;}i:616;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:99:" TRUNCATE: Remove all records from a table. All corresponded spaces allocated for them are released";}i:2;i:7232;}i:617;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7331;}i:618;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7331;}i:619;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7331;}i:620;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7331;}i:621;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:" COMMENT: Define or change the comment of an object";}i:2;i:7335;}i:622;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7386;}i:623;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7386;}i:624;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7386;}i:625;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7388;}i:626;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"Create";i:1;i:3;i:2;i:7388;}i:2;i:7388;}i:627;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7388;}i:628;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7388;}i:629;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:"Create is one of the most used command in sql. In postgresql, you can create 42 different objects with create command.";}i:2;i:7406;}i:630;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7524;}i:631;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:791:"
# create database
CREATE DATABASE database_name [parameters]
# create table
CREATE [TEMPORARY] TABLE [IF NOT EXISTS] table_name [parameters]
# create view
CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] view_name [parameters]
# create index
CREATE [ CONCURRENTLY ] [ [ IF NOT EXISTS ] INDEX index_name [parameters]

CREATE CAST â€” define a new cast
CREATE EVENT TRIGGER â€” define a new event trigger
CREATE EXTENSION â€” install an extension
CREATE FUNCTION â€” define a new function
CREATE GROUP â€” define a new database role
CREATE SEQUENCE â€” define a new sequence generator
CREATE STATISTICS â€” define extended statistics
CREATE TRIGGER â€” define a new trigger
CREATE TYPE â€” define a new data type
CREATE USER â€” define a new database role
CREATE VIEW â€” define a new view
";i:1;N;i:2;N;}i:2;i:7531;}i:632;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:8332;}i:633;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"Create table";i:1;i:4;i:2;i:8332;}i:2;i:8332;}i:634;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:8332;}i:635;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8332;}i:636;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"The most used CREATE statement in SQL is for tables:";}i:2;i:8354;}i:637;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8406;}i:638;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:129:"
CREATE [TEMPORARY] TABLE [IF NOT EXISTS] table_name (
column_name TYPE column_constraint,
table_constraint table_constraint,
);
";i:1;N;i:2;N;}i:2;i:8413;}i:639;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8413;}i:640;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"List the column names, their data types, and constraints. A table may have multiple columns separated by a comma (,).";}i:2;i:8552;}i:641;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8669;}i:642;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8669;}i:643;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:178:"We have two types of constraints in create command. Table constraints, that defines rules for the data in the table. Column constraints defines rules for the data in the column. ";}i:2;i:8671;}i:644;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8849;}i:645;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8849;}i:646;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"The following are the commonly used column constraints in SQL:";}i:2;i:8851;}i:647;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8914;}i:648;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:8914;}i:649;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:8914;}i:650;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8914;}i:651;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:" NOT NULL â€“ the value of the column cannot be NULL.";}i:2;i:8918;}i:652;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:8971;}i:653;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:8971;}i:654;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:8971;}i:655;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:8971;}i:656;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:249:" UNIQUE â€“ the value of the column must be unique across the whole table. SQL standard only allows one NULL value in the column that has the UNIQUE constraint (PostgreSQL treats each NULL value to be unique so such column can have many NULL values)";}i:2;i:8975;}i:657;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9224;}i:658;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9224;}i:659;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9224;}i:660;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9224;}i:661;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:254:" PRIMARY KEY â€“ this constraint is the combination of NOT NULL and UNIQUE constraints. You can define one column as PRIMARY KEY by using column level constraint. In case the primary key contains multiple columns, you must use the table-level constraint.";}i:2;i:9228;}i:662;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9482;}i:663;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9482;}i:664;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9482;}i:665;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9482;}i:666;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:161:" CHECK â€“ enables to check a condition when you insert or update data. For example, the values in the price column of the product table must be positive values.";}i:2;i:9486;}i:667;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9647;}i:668;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9647;}i:669;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9647;}i:670;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9647;}i:671;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:" REFERENCES â€“ constrains the value of the column that exists in a column in another table. You use REFERENCES to define the foreign key constraint.";}i:2;i:9651;}i:672;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9800;}i:673;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9800;}i:674;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9800;}i:675;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9800;}i:676;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:141:"The table constraints are similar to column constraints except that they are applied to the entire table rather than to an individual column.";}i:2;i:9802;}i:677;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9943;}i:678;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9943;}i:679;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"The following are the table constraints:";}i:2;i:9945;}i:680;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9985;}i:681;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9985;}i:682;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9985;}i:683;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9985;}i:684;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:" UNIQUE (column_list) â€“ to force the value stored in the columns listed inside the parentheses to be unique.";}i:2;i:9989;}i:685;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10099;}i:686;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10099;}i:687;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10099;}i:688;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10099;}i:689;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:" PRIMARY KEY(column_list) â€“ to define the primary key that consists of multiple columns.";}i:2;i:10103;}i:690;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10193;}i:691;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10193;}i:692;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10193;}i:693;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10193;}i:694;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:" CHECK (condition) â€“ to check a condition when inserting or updating data.";}i:2;i:10197;}i:695;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10273;}i:696;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10273;}i:697;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10273;}i:698;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10273;}i:699;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:" REFERENCES â€“ to constrain the value stored in the column that must exist in a column in another table.";}i:2;i:10277;}i:700;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10382;}i:701;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10382;}i:702;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10382;}i:703;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10383;}i:704;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"Example of create table";i:1;i:4;i:2;i:10383;}i:2;i:10383;}i:705;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:10383;}i:706;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10383;}i:707;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:"Suppose we have a system to manage user account and role. So we need to create three tables:";}i:2;i:10415;}i:708;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10507;}i:709;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:10507;}i:710;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10507;}i:711;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10507;}i:712;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" account";}i:2;i:10512;}i:713;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10520;}i:714;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10520;}i:715;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10520;}i:716;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10520;}i:717;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" role";}i:2;i:10524;}i:718;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10529;}i:719;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10529;}i:720;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10529;}i:721;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10529;}i:722;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" account_role";}i:2;i:10533;}i:723;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10546;}i:724;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10546;}i:725;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10546;}i:726;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10546;}i:727;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"The account table has the following columns with the corresponding constraints:";}i:2;i:10548;}i:728;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10627;}i:729;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:10627;}i:730;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10627;}i:731;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10627;}i:732;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" user_id â€“ primary key";}i:2;i:10631;}i:733;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10655;}i:734;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10655;}i:735;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10655;}i:736;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10655;}i:737;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" username â€“ unique and not null";}i:2;i:10659;}i:738;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10692;}i:739;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10692;}i:740;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10692;}i:741;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10692;}i:742;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" password â€“ not null";}i:2;i:10696;}i:743;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10718;}i:744;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10718;}i:745;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10718;}i:746;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10718;}i:747;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" email â€“ unique and not null";}i:2;i:10722;}i:748;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10752;}i:749;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10752;}i:750;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10752;}i:751;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10752;}i:752;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" created_on â€“ not null";}i:2;i:10756;}i:753;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10780;}i:754;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10780;}i:755;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10780;}i:756;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10780;}i:757;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" last_login â€“ null";}i:2;i:10784;}i:758;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10804;}i:759;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10804;}i:760;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10804;}i:761;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10804;}i:762;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"The role table has the following columns with the corresponding constraints:";}i:2;i:10806;}i:763;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10882;}i:764;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:10882;}i:765;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10882;}i:766;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10882;}i:767;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" role_id - primary key";}i:2;i:10886;}i:768;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10908;}i:769;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10908;}i:770;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:10908;}i:771;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:10908;}i:772;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" role_name - unique and not null";}i:2;i:10912;}i:773;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:10944;}i:774;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:10944;}i:775;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:10944;}i:776;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10944;}i:777;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:151:"The account_role table is an association table which links an account to 0 or n roles, it has the following columns with the corresponding constraints:";}i:2;i:10946;}i:778;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11097;}i:779;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:11097;}i:780;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:11097;}i:781;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:11097;}i:782;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:" user_id - the foreign key reference to column user_id of account table";}i:2;i:11101;}i:783;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:11172;}i:784;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:11172;}i:785;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:11172;}i:786;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:11172;}i:787;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:" role_id - the foreign key reference to column role_id of role table";}i:2;i:11176;}i:788;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:11244;}i:789;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:11244;}i:790;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:11244;}i:791;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:11244;}i:792;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:" grant_date - timestamp without time zone";}i:2;i:11248;}i:793;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:11289;}i:794;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:11289;}i:795;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:11289;}i:796;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:11289;}i:797;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" (user_id,role_id) - primary key";}i:2;i:11293;}i:798;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:11325;}i:799;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:11325;}i:800;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:11325;}i:801;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:742:"
CREATE TABLE account (
user_id serial PRIMARY KEY,
username VARCHAR (50) UNIQUE NOT NULL,
password VARCHAR (50) NOT NULL,
email VARCHAR (355) UNIQUE NOT NULL,
created_on TIMESTAMP NOT NULL,
last_login TIMESTAMP
);

CREATE TABLE role(
role_id serial PRIMARY KEY,
role_name VARCHAR (255)
UNIQUE NOT NULL
);

CREATE TABLE account_role (
user_id integer NOT NULL,
role_id integer NOT NULL,
grant_date timestamp without time zone,
PRIMARY KEY (user_id, role_id),
CONSTRAINT account_role_role_id_fkey FOREIGN KEY (role_id)
REFERENCES role (role_id) MATCH SIMPLE
ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT account_role_user_id_fkey FOREIGN KEY (user_id)
REFERENCES account (user_id) MATCH SIMPLE
ON UPDATE NO ACTION ON DELETE NO ACTION
);
";i:1;N;i:2;N;}i:2;i:11333;}i:802;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12085;}i:803;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:4:"Drop";i:1;i:3;i:2;i:12085;}i:2;i:12085;}i:804;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:12085;}i:805;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12085;}i:806;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:282:"The drop statement in SQL is used to delete created database objects. You can use the drop statement in SQL to delete databases, tables, indexes, etc. In PostgreSQL, we have 43 commands to delete existing objects. The Below list contains some of the most common used drop commands: ";}i:2;i:12101;}i:807;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12383;}i:808;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:697:"
# delete database
DROP DATABASE [ IF EXISTS ] database_name
# delete table, add cascade if 
DROP TABLE [ IF EXISTS ] table_name [ CASCADE ]
# delete view
DROP VIEW [ IF EXISTS ] table_name [ CASCADE ]
# delete index
DROP INDEX [ IF EXISTS ] index_name [ CASCADE ]
DROP CAST â€” remove a cast
DROP EXTENSION â€” remove an extension
DROP FOREIGN TABLE â€” remove a foreign table
DROP FUNCTION â€” remove a function
DROP LANGUAGE â€” remove a procedural language
DROP OPERATOR â€” remove an operator
DROP OWNED â€” remove database objects owned by a database role
DROP SCHEMA â€” remove a schema
DROP SEQUENCE â€” remove a sequence
DROP TRIGGER â€” remove a trigger
DROP TYPE â€” remove a data type
";i:1;N;i:2;N;}i:2;i:12390;}i:809;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:13097;}i:810;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"drop table";i:1;i:4;i:2;i:13097;}i:2;i:13097;}i:811;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:13097;}i:812;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13097;}i:813;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:254:"The most used drop statement in sql is for tables. If you drop a table, all the rows in the table are deleted and the table structure is removed from the database. We can also use the drop statement in alter table statement to remove columns from tables.";}i:2;i:13117;}i:814;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13371;}i:815;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13371;}i:816;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"According to the sql standard, specifying either RESTRICT or ";}i:2;i:13373;}i:817;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13434;}i:818;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"CASCADE";}i:2;i:13436;}i:819;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13443;}i:820;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:183:" is required in a drop command.
When cascade is specified in a drop command, it will automatically drop objects that depend on the table (e.g. views, constraints or any other objects)";}i:2;i:13445;}i:821;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13628;}i:822;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13628;}i:823;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:168:"In a complex database, many tables have foreign key constraints, or views, triggers, functions, etc. When you do drop table toto, you will often receive errors such as ";}i:2;i:13630;}i:824;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13798;}i:825;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:"unique/primary keys in table referenced by foreign keys";}i:2;i:13799;}i:826;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:13854;}i:827;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:". So we have to use ";}i:2;i:13855;}i:828;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:13875;}i:829;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"CASCADE";}i:2;i:13877;}i:830;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:13884;}i:831;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:" to remove the table. But keep in mind when you do ";}i:2;i:13886;}i:832;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13937;}i:833;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"drop table toto cascad;";}i:2;i:13938;}i:834;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:13961;}i:835;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:", all the dependent objects will be removed, as will any objects that depend on them, recursively.";}i:2;i:13962;}i:836;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14060;}i:837;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:14062;}i:838;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"Drop example";i:1;i:4;i:2;i:14062;}i:2;i:14062;}i:839;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:14062;}i:840;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14062;}i:841;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:142:"We retake the example of create table, suppose the table of account, role, account_role are already created. Now we want to drop table account";}i:2;i:14084;}i:842;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14226;}i:843;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:14228;}i:844;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:5:"Alter";i:1;i:3;i:2;i:14228;}i:2;i:14228;}i:845;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:14228;}i:846;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14228;}i:847;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:273:"Modifies the definition of an existing database object, such as a table. There are 42 different ALTER commands in PostgreSQL. ALTER TABLE changes the definition of an existing table. There are several subforms. Note that the lock level required may differ for each subform.";}i:2;i:14245;}i:848;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14518;}i:849;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14518;}i:850;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"Examples of alter table columns";}i:2;i:14520;}i:851;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14557;}i:852;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:139:"
ALTER TABLE table_name ADD COLUMN column_name data_type;
ALTER TABLE table_name DROP COLUMN [IF EXISTS] column_name [RESTRICT | CASCADE];
";i:1;N;i:2;N;}i:2;i:14557;}i:853;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14557;}i:854;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"We can also modify table constraints with alter";}i:2;i:14706;}i:855;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14753;}i:856;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:440:"
# Create a new constraint
ALTER TABLE table_name ADD table_constraint [ NOT VALID ]

# Apply the newly created constraints on the table which was previously created as NOT VALID, by scanning the table to ensure there are no rows for which the constraint is not satisfied.
ALTER TABLE table_name VALIDATE CONSTRAINT constraint_name

# drop constraint 
ALTER TABLE table_name DROP CONSTRAINT [IF EXISTS] constraint_name [RESTRICT | CASCADE]
";i:1;N;i:2;N;}i:2;i:14760;}i:857;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14760;}i:858;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:234:"Note: ALTER TABLE that acts on a single table can be combined into a list of multiple alterations to be applied together. For example, it is possible to add several columns and/or alter the type of
several columns in a single command.";}i:2;i:15210;}i:859;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15444;}i:860;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:15446;}i:861;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"Rename";i:1;i:3;i:2;i:15446;}i:2;i:15446;}i:862;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:15446;}i:863;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15446;}i:864;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"Only three rename commands in postgresql ";}i:2;i:15464;}i:865;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15505;}i:866;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:306:"
# Rename a column
ALTER TABLE [ IF EXISTS ] [ ONLY ] table_name RENAME [ COLUMN ] column_name TO new_column_name
# Rename a constraint
ALTER TABLE [ IF EXISTS ] [ ONLY ] table_name RENAME CONSTRAINT constraint_name TO new_constraint_name
# Rename a table
ALTER TABLE [ IF EXISTS ] name RENAME TO new_name
";i:1;N;i:2;N;}i:2;i:15512;}i:867;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15512;}i:868;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:91:"Note: When renaming a constraint that has an underlying index, the index is renamed as well";}i:2;i:15828;}i:869;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15919;}i:870;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:15921;}i:871;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"TRUNCATE";i:1;i:3;i:2;i:15921;}i:2;i:15921;}i:872;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:15921;}i:873;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15921;}i:874;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:315:"You can use SQL TRUNCATE TABLE statement to remove all data from large tables quickly. To remove all data from a table, you use the DELETE statement. However, for a large table, it is more efficient to use the TRUNCATE TABLE statement. The TRUNCATE TABLE statement removes all rows from a table without scanning it.";}i:2;i:15941;}i:875;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16256;}i:876;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:42:"
TRUNCATE TABLE table_name1, table_name2,
";i:1;N;i:2;N;}i:2;i:16263;}i:877;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16263;}i:878;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"The advantage of truncate compare to drop table:";}i:2;i:16315;}i:879;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16363;}i:880;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:16363;}i:881;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:16363;}i:882;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:16363;}i:883;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" Reclaim Space immediately";}i:2;i:16367;}i:884;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:16393;}i:885;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:16393;}i:886;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:16393;}i:887;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:16393;}i:888;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" No impact on transaction logs";}i:2;i:16397;}i:889;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:16427;}i:890;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:16427;}i:891;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:16427;}i:892;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:16429;}i:893;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:7:"Comment";i:1;i:3;i:2;i:16429;}i:2;i:16429;}i:894;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:16429;}i:895;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16429;}i:896;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:313:"There is no COMMENT command in the SQL standard. You can use a SQL COMMENT statement to store a comment about a database object. Only one comment string is stored for each object, so to modify a comment, issue a new COMMENT command for the same object. To remove a comment, write NULL in place of the text string.";}i:2;i:16448;}i:897;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16761;}i:898;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:34:"
COMMENT ON object_name IS 'text'
";i:1;N;i:2;N;}i:2;i:16768;}i:899;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:16811;}i:900;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:16811;}}