
<h1 class="sectionedit1" id="different_data_formats_in_big_data_ecosystem">Different data formats in big data ecosystem</h1>
<div class="level1">

<p>
In the big data environment, we have many different data formats. They can be divided into the following three categories.
</p>
<ul>
<li class="level1"><div class="li"> Structured Data</div>
</li>
<li class="level1"><div class="li"> Unstructured Data</div>
</li>
<li class="level1"><div class="li"> Semi-structured Data</div>
</li>
</ul>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Different data formats in big data ecosystem&quot;,&quot;hid&quot;:&quot;different_data_formats_in_big_data_ecosystem&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-254&quot;} -->
<h2 class="sectionedit2" id="structured_data">Structured Data</h2>
<div class="level2">

<p>
A <strong>data model</strong> is an abstract model that organizes elements of data and standardizes how they relate to one another and to the properties of real-world entities. For instance, a data model may specify that the data element representing a car be composed of a number of other elements which, in turn, represent the color and size of the car and define its owner.
</p>

<p>
The term <strong>data model</strong> is used in two distinct but closely related senses. Sometimes it refers to an abstract formalization of the objects and relationships found in a particular application domain, for example the customers, products, and orders found in a manufacturing organization. At other times it refers to a set of concepts used in defining such formalizations: for example concepts such as entities, attributes, relations, or tables. So the “data model” of a banking application may be defined using the entity-relationship “data model”. We use the term in both senses. 
</p>

<p>
All data which obey the formal structure of <strong>data models</strong> are considered as structured data.  
</p>

<p>
For example, data stored in the relational database in the form of tables having multiple rows and columns. The spreadsheet(excel has more controls than csv on the columns) is another good example of structured data.
</p>

<p>
Check this for more info about data model: <a href="https://en.wikipedia.org/wiki/Data_model#Database_model" class="urlextern" title="https://en.wikipedia.org/wiki/Data_model#Database_model" rel="nofollow">https://en.wikipedia.org/wiki/Data_model#Database_model</a>
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Structured Data&quot;,&quot;hid&quot;:&quot;structured_data&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:2,&quot;range&quot;:&quot;255-1645&quot;} -->
<h2 class="sectionedit3" id="semi-structured_data">Semi-structured Data</h2>
<div class="level2">

<p>
Semi-structured data is a form of structured data that does not obey the formal structure of <strong>data models</strong> associated with relational databases or other forms of data tables, but nonetheless contains tags or other markers to separate semantic elements and enforce hierarchies of records and fields within the data. Therefore, it is also known as self-describing structure. 
</p>

<p>
JSON(JavaScript Object Notation) files, BibTex files, .csv files, tab-delimited text files, XML and other markup languages are examples of Semi-structured data.
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Semi-structured Data&quot;,&quot;hid&quot;:&quot;semi-structured_data&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:3,&quot;range&quot;:&quot;1646-2218&quot;} -->
<h3 class="sectionedit4" id="advantages">Advantages</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> Programmers persisting objects from their application to a database do not need to worry about object-relational impedance mismatch, but can often serialize objects via a light-weight library.</div>
</li>
<li class="level1"><div class="li"> Support for nested or hierarchical data often simplifies data models representing complex relationships between entities.</div>
</li>
<li class="level1"><div class="li"> Support for lists of objects simplifies data models by avoiding messy translations of lists into a relational data model.</div>
</li>
</ul>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Advantages&quot;,&quot;hid&quot;:&quot;advantages&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:4,&quot;range&quot;:&quot;2219-2689&quot;} -->
<h3 class="sectionedit5" id="disadvantages">Disadvantages</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> The traditional relational data model has a popular and ready-made query language, SQL.</div>
</li>
<li class="level1"><div class="li"> Prone to “garbage in, garbage out”; by removing restraints from the data model, there is less fore-thought that is necessary to operate a data application.</div>
</li>
</ul>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Disadvantages&quot;,&quot;hid&quot;:&quot;disadvantages&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:5,&quot;range&quot;:&quot;2690-2966&quot;} -->
<h2 class="sectionedit6" id="unstructured_data">Unstructured Data</h2>
<div class="level2">

<p>
Unstructured data (or unstructured information) is information that either does not have a pre-defined data model or is not organized in a pre-defined manner. Unstructured information is typically text-heavy but may contain data such as dates, numbers, and facts as well. This results in irregularities and ambiguities that make it difficult to understand using traditional programs as compared to data stored in fielded form in databases or annotated (semantically tagged) in documents.
</p>

<p>
For example, e-mail messages, word processing documents, videos, photos, audio files, presentations, webpages and many other kinds of business documents are all unstructured data.
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Unstructured Data&quot;,&quot;hid&quot;:&quot;unstructured_data&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:6,&quot;range&quot;:&quot;2967-3668&quot;} -->
<h2 class="sectionedit7" id="common_data_formats_in_big_data_environment">Common data formats in big data environment</h2>
<div class="level2">

<p>
Avro
</p>

<p>
Parquet
</p>

<p>
Sequence files
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Common data formats in big data environment&quot;,&quot;hid&quot;:&quot;common_data_formats_in_big_data_environment&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:7,&quot;range&quot;:&quot;3669-&quot;} -->