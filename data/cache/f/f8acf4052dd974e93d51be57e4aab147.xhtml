
<h1 class="sectionedit1" id="ssh_debug">SSH debug</h1>
<div class="level1">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;SSH debug&quot;,&quot;hid&quot;:&quot;ssh_debug&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-25&quot;} -->
<h1 class="sectionedit2" id="set_up_ssh_keys_on_centos7">Set up SSH keys on Centos7</h1>
<div class="level1">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Set up SSH keys on Centos7&quot;,&quot;hid&quot;:&quot;set_up_ssh_keys_on_centos7&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:2,&quot;range&quot;:&quot;26-67&quot;} -->
<h2 class="sectionedit3" id="generate_ssh_key_paire">1. Generate ssh key paire</h2>
<div class="level2">

<p>
If you already have a ssh key paire, you can skip this step.
</p>
<pre class="code"># By default, ssh-keygen will create a 2048-bit RSA key pair, which is secure enough for most use cases (you may optionally pass in the -b 4096 flag to create a larger 4096-bit key).
ssh-keygen
</pre>

<p>
After entering the command, you should see the following prompt:
</p>
<pre class="code">Output
Generating public/private rsa key pair.
Enter file in which to save the key (/your_home/.ssh/id_rsa):</pre>

<p>
Press ENTER to save the key pair into the .ssh/ subdirectory in your home directory, or specify an alternate path.
</p>

<p>
If you had previously generated an SSH key pair, you may see the following prompt:
</p>
<pre class="code">Output
/home/your_home/.ssh/id_rsa already exists.
Overwrite (y/n)?</pre>

<p>
If you choose to overwrite the key on disk, you will not be able to authenticate using the previous key anymore. Be very careful when selecting yes, as this is a destructive process that cannot be reversed.
</p>

<p>
You should then see the following prompt:
</p>
<pre class="code">Output
Enter passphrase (empty for no passphrase):</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;1. Generate ssh key paire&quot;,&quot;hid&quot;:&quot;generate_ssh_key_paire&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:3,&quot;range&quot;:&quot;68-1172&quot;} -->
<h2 class="sectionedit4" id="copy_the_public_key_to_centos7_server">2. Copy the Public Key to Centos7 Server</h2>
<div class="level2">
<pre class="code"># It&#039;s recommended to use the ssh-copy-id command to copy the public key
ssh-copy-id -i .ssh/id_rsa pliu@159.84.108.191

# To do this, you must have password access to the server, if you don&#039;t give -i option, it will find automatically the id_rsa.pub key and upload it to the server </pre>

<p>
If you don&#039;t have the ssh-copy-id, you need to copy the public key manully
</p>

<p>
&lt;/code&gt;
# create the folder .ssh
mkdir -p ~/.ssh
chown pliu:pliu -R ~/.ssh
chmod 0700 -R ~/.ssh
</p>

<p>
# copy the public key
vim authorized_keys
chown pliu:pliu authorized_keys
chmod 0600 -R authorized_keys
&lt;/code&gt;
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;2. Copy the Public Key to Centos7 Server&quot;,&quot;hid&quot;:&quot;copy_the_public_key_to_centos7_server&quot;,&quot;codeblockOffset&quot;:4,&quot;secid&quot;:4,&quot;range&quot;:&quot;1173-1812&quot;} -->
<h1 class="sectionedit5" id="common_problems">Common problems</h1>
<div class="level1">

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Common problems&quot;,&quot;hid&quot;:&quot;common_problems&quot;,&quot;codeblockOffset&quot;:5,&quot;secid&quot;:5,&quot;range&quot;:&quot;1813-1843&quot;} -->
<h2 class="sectionedit6" id="can_t_login_after_adding_authorized_keys">1. Can&#039;t login after adding authorized_keys</h2>
<div class="level2">

<p>
You have done all the above steps, but it still doesn&#039;t work 
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;1. Can&#039;t login after adding authorized_keys&quot;,&quot;hid&quot;:&quot;can_t_login_after_adding_authorized_keys&quot;,&quot;codeblockOffset&quot;:5,&quot;secid&quot;:6,&quot;range&quot;:&quot;1844-1962&quot;} -->
<h3 class="sectionedit7" id="check_first_acl_of_ssh_and_authorized_keys">1.1 Check first acl of .ssh and authorized_keys</h3>
<div class="level3">
<pre class="code">
# check the right of .ssh and authorized_keys
chmod -R 0700 .ssh 
chmod 0600 authorized_keys
</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;1.1 Check first acl of .ssh and authorized_keys&quot;,&quot;hid&quot;:&quot;check_first_acl_of_ssh_and_authorized_keys&quot;,&quot;codeblockOffset&quot;:5,&quot;secid&quot;:7,&quot;range&quot;:&quot;1963-2132&quot;} -->
<h3 class="sectionedit8" id="check_if_your_uid_is_in_the_allowusers_and_allowgroups">1.2 Check if your uid is in the allowusers and allowgroups</h3>
<div class="level3">
<pre class="code"># Check sshd_config
vim /etc/ssh/sshd_config
#  check if pliu is in the AllowUsers or his group in AllowGroups</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;1.2 Check if your uid is in the allowusers and allowgroups&quot;,&quot;hid&quot;:&quot;check_if_your_uid_is_in_the_allowusers_and_allowgroups&quot;,&quot;codeblockOffset&quot;:6,&quot;secid&quot;:8,&quot;range&quot;:&quot;2133-2329&quot;} -->
<h3 class="sectionedit9" id="run_sshd_on_debug_mode">1.3 run sshd on debug mode</h3>
<div class="level3">
<pre class="code">systemctl stop sshd

# The following command start openssh daemon in standalone debug mode and messages will be displayed on the screen. You may specify up to three -d for increased output verbosity.

/sbin/sshd -p &lt;listening port&gt; -D -d -e

# if you want sshd still runs on 22, you can just skip -p &lt;listening port&gt;
# 

# Be careful, when u do this, don&#039;t deconnect, because you will not be able to reconnect.</pre>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;1.3 run sshd on debug mode&quot;,&quot;hid&quot;:&quot;run_sshd_on_debug_mode&quot;,&quot;codeblockOffset&quot;:7,&quot;secid&quot;:9,&quot;range&quot;:&quot;2330-&quot;} -->